<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID73bbff08-d10e-44bf-833f-b858344e0b76" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>http://github.com/inspire-eu-validation/ets-repository/metadata/iso</remoteResource>
  <localPath>/auto</localPath>
  <label>Test three types prof</label>
  <description><![CDATA[three types Description]]></description>
  <reference>../../inspire-md-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>Joltseductress</author>
  <creationDate>2018-08-27T09:52:35.273Z</creationDate>
  <lastEditor>Joltseductress</lastEditor>
  <lastUpdateDate>2018-08-27T09:52:35.273Z</lastUpdateDate>
  <tags>
    <tag ref="EIDfe1f3796-0ebf-4960-a6f7-f935e087fa4c"/>
  </tags>
  <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
  <translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes>
    <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
  </supportedTestObjectTypes>
  <testModules>
    <TestModule id="EID52c66dfb-402d-45a2-a968-d2cce6c3c6e3">
      <label>Default test module</label>
      <description><![CDATA[This is the default test module]]></description>
      <parent ref="EID73bbff08-d10e-44bf-833f-b858344e0b76"/>
      <testCases>
        <TestCase id="EID73d15853-bd0b-4fab-9163-2cc96de191ed">
          <label>TestCase label</label>
          <description><![CDATA[Constraints TestCase for Feature Type with name 'type1' and namespace 'www.threetypes.com']]></description>
          <parent ref="EID52c66dfb-402d-45a2-a968-d2cce6c3c6e3"/>
          <testSteps>
            <TestStep id="EID7f261e1b-a42c-4709-a48a-df3c958b07cb">
              <label>testStep</label>
              <description><![CDATA[This is a test step]]></description>
              <parent ref="EID73d15853-bd0b-4fab-9163-2cc96de191ed"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID829f0cee-d863-438f-9928-47997c5df024">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'type1' and namespace 'www.threetypes.com' should be present in the file]]></description>
                  <parent ref="EID7f261e1b-a42c-4709-a48a-df3c958b07cb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
     let $title := count($record//*[local-name()='type1' and namespace-uri()='www.threetypes.com'])
     return
     if (not($title)) then
      local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'type1', 'namespace': 'www.threetypes.com' })
     else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcf6a5bbf-0d12-4239-94bb-3cacc58876a6">
          <label>TestCase label</label>
          <description><![CDATA[Constraints TestCase for Feature Type with name 'type3' and namespace 'www.threetypes.com']]></description>
          <parent ref="EID52c66dfb-402d-45a2-a968-d2cce6c3c6e3"/>
          <testSteps>
            <TestStep id="EID744ebdda-f4dd-42cb-8ba5-7ec14905d51f">
              <label>testStep</label>
              <description><![CDATA[This is a test step]]></description>
              <parent ref="EIDcf6a5bbf-0d12-4239-94bb-3cacc58876a6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6f556785-9b61-470a-adc7-29062c380a92">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'type3' and namespace 'www.threetypes.com' should be present in the file]]></description>
                  <parent ref="EID744ebdda-f4dd-42cb-8ba5-7ec14905d51f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
     let $title := count($record//*[local-name()='type3' and namespace-uri()='www.threetypes.com'])
     return
     if (not($title)) then
      local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'type3', 'namespace': 'www.threetypes.com' })
     else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID670485ed-ca36-480a-86e9-0b6c094fd144">
          <label>TestCase label</label>
          <description><![CDATA[Constraints TestCase for Feature Type with name 'type2' and namespace 'www.threetypes.com']]></description>
          <parent ref="EID52c66dfb-402d-45a2-a968-d2cce6c3c6e3"/>
          <testSteps>
            <TestStep id="EIDa116d969-29b1-40c4-a4cb-7dc112c10ee2">
              <label>testStep</label>
              <description><![CDATA[This is a test step]]></description>
              <parent ref="EID670485ed-ca36-480a-86e9-0b6c094fd144"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc59c7709-3b3a-4578-ba54-086024ecbe25">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'type2' and namespace 'www.threetypes.com' should be present in the file]]></description>
                  <parent ref="EIDa116d969-29b1-40c4-a4cb-7dc112c10ee2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
     let $title := count($record//*[local-name()='type2' and namespace-uri()='www.threetypes.com'])
     return
     if (not($title)) then
      local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'type2', 'namespace': 'www.threetypes.com' })
     else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</ExecutableTestSuite>
