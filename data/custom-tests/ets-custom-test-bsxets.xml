<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID21b9c79f-53e5-4ce5-8d49-c383fd7a4a6f" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>http://github.com/inspire-eu-validation/ets-repository/metadata/iso</remoteResource>
  <localPath>/auto</localPath>
  <label>CSW hw</label>
  <description><![CDATA[This test was generated automatically from a Schema profile in haleconnect]]></description>
  <reference>../../inspire-md-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>Joltseductress</author>
  <creationDate>2018-09-05T09:57:36.487Z</creationDate>
  <lastEditor>Joltseductress</lastEditor>
  <lastUpdateDate>2018-09-05T09:57:36.487Z</lastUpdateDate>
  <tags>
    <tag ref="EIDfe1f3796-0ebf-4960-a6f7-f935e087fa4c"/>
  </tags>
  <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
  <translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes>
    <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
  </supportedTestObjectTypes>
  <testModules>
    <TestModule id="EIDa4602431-25b6-4e5d-97b6-27c45876039b">
      <label>Default test module</label>
      <description><![CDATA[This is the default test module]]></description>
      <parent ref="EID21b9c79f-53e5-4ce5-8d49-c383fd7a4a6f"/>
      <testCases>
        <TestCase id="EID70b08246-2172-4a36-b556-30a41e957ef8">
          <label>inspireidentifiziert</label>
          <description><![CDATA[inspireidentifiziert]]></description>
          <parent ref="EIDa4602431-25b6-4e5d-97b6-27c45876039b"/>
          <testSteps>
            <TestStep id="EID4498a863-bed0-4bdf-b8be-14bebf837aca">
              <label>testStep</label>
              <description><![CDATA[This is a test step]]></description>
              <parent ref="EID70b08246-2172-4a36-b556-30a41e957ef8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa5d54856-2061-4d09-9b96-5c2ad83a5106">
                  <label>Hello</label>
                  <description><![CDATA[Test assertion for a condition with the following information:
<br />Name: inspireidentifiziert
<br />Description: inspireidentifiziert
<br />Subconditions: 
<br />- IF MD_Metadata.identificationInfo.MD_DataIdentification.descriptiveKeywords.MD_Keywords.keyword EXISTS
<br /> THEN MD_Metadata.identificationInfo.MD_DataIdentification.descriptiveKeywords.MD_Keywords.keyword.CharacterString IS 'inspireidentifiziert'
<br />]]></description>
                  <parent ref="EID4498a863-bed0-4bdf-b8be-14bebf837aca"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages :=
    (for $record in $db
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 

      let $messages0 :=
      (for $typeFound in $typesFound 
        let $ifPropertyCount := count($typeFound//*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_ConformanceResult' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='specification' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
        return 
        if ($ifPropertyCount eq 0) then 
          local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'specification', 'namespace': 'http://www.isotc211.org/2005/gmd' })
        else ()
      )[position() le $limitErrors]

      let $messages1 :=
        (for $typeFound in $typesFound 
          let $ifPropertyCount := count($typeFound//*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_ConformanceResult' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='specification' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
          return 
          if ($ifPropertyCount eq 0) then 
            local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'specification', 'namespace': 'http://www.isotc211.org/2005/gmd' })
          else ()
        )[position() le $limitErrors]

      let $messagesC := 
        if ((count($messages0 eq 0) or (count($messages1 eq 0)) then ()
        else ($messages0, $messages1)
      return $messagesC
    )[position() le $limitErrors]

return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
                  </expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</ExecutableTestSuite>
