<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDeab974cd-9e33-46cf-bb25-3571246233d9" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>http://github.com/inspire-eu-validation/ets-repository/metadata/iso</remoteResource>
  <localPath>/auto</localPath>
  <label>Kopie jo - Metadatenprofil GDI-NW (Basis für alle Ressourcentypen)</label>
  <description><![CDATA[Ausgehend von diesen Basisfestlegungen sollen später die spezifischen Profilausprägungen je Ressourcenart (Daten insgesamt, Dienste, Anwendungen) abgeleitet werden. Diese Basis ist daher eine Kopiervorlage zur weiteren Detaillierung/Anpassung.]]></description>
  <reference>../../inspire-md-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>Peter Kochmann (Gst. GDI-NW)</author>
  <creationDate>2021-03-30T06:32:18.024Z</creationDate>
  <lastEditor>Peter Kochmann (Gst. GDI-NW)</lastEditor>
  <lastUpdateDate>2021-03-30T07:17:57.158Z</lastUpdateDate>
  <tags>
    <tag ref="EIDfe1f3796-0ebf-4960-a6f7-f935e087fa4c"/>
  </tags>
  <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
  <translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes>
    <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
  </supportedTestObjectTypes>
  <testModules>
    <TestModule id="EID36087938-691c-48e0-bcd7-ff15875c1e63">
      <label>C­I_­Date</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDb5970d17-e9e9-4243-8cbe-14ff364d2dc9">
          <label>ISO-Element Nr. 395: Bedeutung des Datums</label>
          <description><![CDATA[Pflichtelement in Datumsangaben: die Bedeutung des Datums muss belegt sein.]]></description>
          <parent ref="EID36087938-691c-48e0-bcd7-ff15875c1e63"/>
          <testSteps>
            <TestStep id="EIDc28fb353-1c23-4845-b812-b46f691aee31">
              <label>ISO-Element Nr. 395: Bedeutung des Datums</label>
              <description><![CDATA[Pflichtelement in Datumsangaben: die Bedeutung des Datums muss belegt sein.]]></description>
              <parent ref="EIDb5970d17-e9e9-4243-8cbe-14ff364d2dc9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9b6cedfa-c8ac-4b93-8f3b-8f6e922a22e5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>creation</li><li>publication</li><li>revision</li></ul>]]></description>
                  <parent ref="EIDc28fb353-1c23-4845-b812-b46f691aee31"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('creation', 'publication', 'revision')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Date' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='dateType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Date', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'dateType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDed8e6693-7b0a-4d33-bfa7-2a1f92979d4b">
      <label>DQ_Scope</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDca5d9167-7c7e-4835-baad-cc5b03ff55a2">
          <testSteps>
            <TestStep id="EID9671c009-757e-4511-8b88-c8daf496e244">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EIDca5d9167-7c7e-4835-baad-cc5b03ff55a2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDffa48707-9aad-4e53-9b17-c6236b390b96">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID9671c009-757e-4511-8b88-c8daf496e244"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2a22257b-a7f0-4623-b8d8-df05e3a072b9">
          <testSteps>
            <TestStep id="EID7d912c54-0157-48eb-a13a-62364765c004">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID2a22257b-a7f0-4623-b8d8-df05e3a072b9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID15b8fe92-9a8e-4469-9d83-ebf21b923661">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID7d912c54-0157-48eb-a13a-62364765c004"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='service'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID210ba693-27f6-499f-9e14-1771613d6491">
          <testSteps>
            <TestStep id="EID8ef81c3d-121d-4b7b-ac91-2d9b279c5b6a">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID210ba693-27f6-499f-9e14-1771613d6491"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2cf996b6-7099-460a-9445-b574a42b9d6a">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID8ef81c3d-121d-4b7b-ac91-2d9b279c5b6a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb378f28b-4735-4ddc-9019-b108a2ee8b34">
          <testSteps>
            <TestStep id="EID2f558c21-e8fe-42ab-9fb1-9fe143d96636">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EIDb378f28b-4735-4ddc-9019-b108a2ee8b34"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7cb32927-4b1b-4e70-9ee1-b661663e1072">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID2f558c21-e8fe-42ab-9fb1-9fe143d96636"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID718b302d-dd96-495e-b470-0d1d837550f4">
          <testSteps>
            <TestStep id="EID1c92ca85-ee16-4e3e-b304-c9ecb25c866f">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID718b302d-dd96-495e-b470-0d1d837550f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID749f0aee-1bde-4ba6-8931-09de94310c4d">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID1c92ca85-ee16-4e3e-b304-c9ecb25c866f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='service'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID425008c7-5c6d-4f6c-917c-895d3e045433">
          <testSteps>
            <TestStep id="EID077c203a-810a-4a47-945b-e244d35696a1">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID425008c7-5c6d-4f6c-917c-895d3e045433"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd3ae1bdc-cf36-4156-aa14-a0e0007e52f3">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EID077c203a-810a-4a47-945b-e244d35696a1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcc5e27cb-170d-4f6f-9a38-7753f6fa3851">
          <testSteps>
            <TestStep id="EIDab906a22-9a64-4f48-b01a-392fae0943f6">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EIDcc5e27cb-170d-4f6f-9a38-7753f6fa3851"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc5d7940b-f065-454e-b2bb-693d9a381357">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDab906a22-9a64-4f48-b01a-392fae0943f6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID31f2a924-35ba-40f3-8860-3ed671a10a34">
          <testSteps>
            <TestStep id="EIDebbe17cd-cb3a-4489-8474-d894a18a428c">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID31f2a924-35ba-40f3-8860-3ed671a10a34"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9093a665-8377-4537-a545-553effb54b0d">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDebbe17cd-cb3a-4489-8474-d894a18a428c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='service'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID57d936fa-88e0-48da-98ab-66b0a7de0128">
          <testSteps>
            <TestStep id="EIDd6578436-47d8-4fa7-90f6-df3575e4be03">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID57d936fa-88e0-48da-98ab-66b0a7de0128"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID71deae04-6fb9-4fa4-976b-89cf74986f6c">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDd6578436-47d8-4fa7-90f6-df3575e4be03"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID7e62cfaa-f5b6-4384-97c2-7af3e6f9ca83">
      <label>M­D_­Format</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID583c753d-d79c-4316-ba94-404cb2868028">
          <label>ISO-Element Nr. 287: amendment­Number</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID7e62cfaa-f5b6-4384-97c2-7af3e6f9ca83"/>
          <testSteps>
            <TestStep id="EIDa8b57639-5cfd-4a4a-b29d-0f83096ca6cf">
              <label>ISO-Element Nr. 287: amendment­Number</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID583c753d-d79c-4316-ba94-404cb2868028"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID93c90347-0946-4afc-8501-cb6ae5d14d86">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'amendmentNumber' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDa8b57639-5cfd-4a4a-b29d-0f83096ca6cf"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Format' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='amendmentNumber' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Format', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID15803b4d-48a0-41bf-86f2-2d3833088c9d">
          <label>ISO-Element Nr. 290: format­Distributor</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID7e62cfaa-f5b6-4384-97c2-7af3e6f9ca83"/>
          <testSteps>
            <TestStep id="EID1527d551-46ce-4563-9fa6-1ff536b68210">
              <label>ISO-Element Nr. 290: format­Distributor</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID15803b4d-48a0-41bf-86f2-2d3833088c9d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf0d0f420-f3fc-4eab-9a84-742392d69964">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'formatDistributor' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1527d551-46ce-4563-9fa6-1ff536b68210"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Format' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='formatDistributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Format', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID4f5f99ee-3355-4321-8b0e-7b9b5ae56cc0">
      <label>M­D_­Security­Constraints</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDfdd9e91a-9e5b-4c1d-8361-01d8a35e9ee4">
          <label>ISO-Element Nr. 74: Sicherheitseinstufung</label>
          <description><![CDATA[Pflichtelement in Angaben zu Sicherheitseinschränkungen: die Sicherheitseinstufung muss vorhanden sein.]]></description>
          <parent ref="EID4f5f99ee-3355-4321-8b0e-7b9b5ae56cc0"/>
          <testSteps>
            <TestStep id="EIDa4c2a4a4-ad33-42df-a8a4-d33ad04c63a4">
              <label>ISO-Element Nr. 74: Sicherheitseinstufung</label>
              <description><![CDATA[Pflichtelement in Angaben zu Sicherheitseinschränkungen: die Sicherheitseinstufung muss vorhanden sein.]]></description>
              <parent ref="EIDfdd9e91a-9e5b-4c1d-8361-01d8a35e9ee4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6844539b-7770-4407-acdb-5df03b590d18">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'classification' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>restricted</li><li>unclassified</li><li>confidential</li><li>secret</li><li>topSecret</li></ul>]]></description>
                  <parent ref="EIDa4c2a4a4-ad33-42df-a8a4-d33ad04c63a4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('restricted', 'unclassified', 'confidential', 'secret', 'topSecret')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='classification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'classification', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbdd2caa4-936d-4b0d-b605-cf9b0a7dd5ba">
          <label>ISO-Element Nr. 75: user­Note</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4f5f99ee-3355-4321-8b0e-7b9b5ae56cc0"/>
          <testSteps>
            <TestStep id="EID2e828401-806d-4f5d-9547-a7fec208ea2b">
              <label>ISO-Element Nr. 75: user­Note</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbdd2caa4-936d-4b0d-b605-cf9b0a7dd5ba"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID28daa256-d1f5-42ae-b2f7-46398cd8f903">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'userNote' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID2e828401-806d-4f5d-9547-a7fec208ea2b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='userNote' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2af755b9-2609-4292-b009-5eae5f4bc31e">
          <label>ISO-Element Nr. 76: classification­System</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4f5f99ee-3355-4321-8b0e-7b9b5ae56cc0"/>
          <testSteps>
            <TestStep id="EID72c20cf0-700c-4aa2-8672-17e0ec1b5401">
              <label>ISO-Element Nr. 76: classification­System</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID2af755b9-2609-4292-b009-5eae5f4bc31e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDba08f954-ec8c-4550-9f57-0909493cb28b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'classificationSystem' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID72c20cf0-700c-4aa2-8672-17e0ec1b5401"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='classificationSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0af67e0a-da73-4770-90f9-c833a6b9db73">
          <label>ISO-Element Nr. 77: handling­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4f5f99ee-3355-4321-8b0e-7b9b5ae56cc0"/>
          <testSteps>
            <TestStep id="EID08c0a438-9833-4f5b-9a01-d3f15c8d975e">
              <label>ISO-Element Nr. 77: handling­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID0af67e0a-da73-4770-90f9-c833a6b9db73"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbc4dc989-672c-492d-8434-e334892a0755">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'handlingDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID08c0a438-9833-4f5b-9a01-d3f15c8d975e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='handlingDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID17755fa2-874c-4a97-ae13-725bb60da36c">
      <label>E­X_­Geographic­Description</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDaffe44f1-209f-41ab-b30f-0ba6b1656b0d">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID17755fa2-874c-4a97-ae13-725bb60da36c"/>
          <testSteps>
            <TestStep id="EID48f82f8d-5036-43fd-9540-80c30b6ae7d4">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EIDaffe44f1-209f-41ab-b30f-0ba6b1656b0d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf955bc5c-cedc-42e5-a58f-4b0f89ef8afe">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID48f82f8d-5036-43fd-9540-80c30b6ae7d4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='EX_GeographicDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'EX_GeographicDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDea333617-9993-40ac-9630-cc865117b1a0">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID17755fa2-874c-4a97-ae13-725bb60da36c"/>
          <testSteps>
            <TestStep id="EID2b3fb58c-ca3f-4661-9461-d26847c90812">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EIDea333617-9993-40ac-9630-cc865117b1a0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID075e4395-f31a-440e-b547-d5b074b9f8f0">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID2b3fb58c-ca3f-4661-9461-d26847c90812"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='EX_GeographicDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDc778c00c-c195-45af-9f6c-d6e29be6f6ea">
      <label>LI_Lineage</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDb87c380a-efcc-4819-8a67-a4acd995b389">
          <testSteps>
            <TestStep id="EID1fb5cd93-3635-4573-9605-dbaac17b792e">
              <label>ISO-Element Nr. 82: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in LI_Lineage: eines der Elemente statement, processStep oder source muss belegt sein.]]></description>
              <parent ref="EIDb87c380a-efcc-4819-8a67-a4acd995b389"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID15f03b26-991e-4391-8797-9c0c77b33b7a">
                  <label>ISO-Element Nr. 82: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in LI_Lineage: eines der Elemente statement, processStep oder source muss belegt sein.]]></description>
                  <parent ref="EID1fb5cd93-3635-4573-9605-dbaac17b792e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='statement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'statement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='processStep' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'processStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='source' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0)) then ()
   else ($messages0, $messages1, $messages2)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDb65a1d31-af69-4df9-bc40-150a698e0f85">
      <label>EX_Extent</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDd2a58945-7a69-4202-a669-f69f2371e5a1">
          <testSteps>
            <TestStep id="EID0bc2ad50-36a5-4417-81f8-9b1408492d9e">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EIDd2a58945-7a69-4202-a669-f69f2371e5a1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID933274c2-8d8c-4cea-bfe6-080b489d1a1c">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID0bc2ad50-36a5-4417-81f8-9b1408492d9e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID14da8f08-cecb-4751-b554-5a2659f9190c">
          <testSteps>
            <TestStep id="EIDaccf4823-ac4c-4fa7-b6dc-03f81b1674d6">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID14da8f08-cecb-4751-b554-5a2659f9190c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID788cac70-17cd-47f2-8a73-793eae31e95c">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDaccf4823-ac4c-4fa7-b6dc-03f81b1674d6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0b148c45-83ee-42e9-8a9c-32f2ef1a8672">
          <testSteps>
            <TestStep id="EIDc61658ef-6e07-464a-a170-401b7f5e685d">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID0b148c45-83ee-42e9-8a9c-32f2ef1a8672"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID668a61e6-507b-4032-9a4b-6bfec3a93698">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDc61658ef-6e07-464a-a170-401b7f5e685d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbc389985-f1e7-4776-a683-00641c767aa2">
          <testSteps>
            <TestStep id="EID7cb718d9-130c-4758-b8cd-9293daac7cb3">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EIDbc389985-f1e7-4776-a683-00641c767aa2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc4031204-1778-4fc0-8f71-2f5e4d2eec5b">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EID7cb718d9-130c-4758-b8cd-9293daac7cb3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID52bc2639-bbeb-452c-afd5-08d1f6c00847">
          <testSteps>
            <TestStep id="EID5f9abaf3-c313-4cb9-8e30-eccc1e12e82f">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID52bc2639-bbeb-452c-afd5-08d1f6c00847"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf31c9c42-7a00-4c18-915a-1f850880023b">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID5f9abaf3-c313-4cb9-8e30-eccc1e12e82f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf032f0d7-f732-447f-a504-d49d3e931005">
          <testSteps>
            <TestStep id="EIDafd89e63-8eb1-4a5d-96e4-6515e04138d4">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EIDf032f0d7-f732-447f-a504-d49d3e931005"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2063c4b7-28d1-4a32-9c0d-d32e32121e84">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDafd89e63-8eb1-4a5d-96e4-6515e04138d4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0d6c0857-2516-426f-9354-82447f40eb3c">
          <testSteps>
            <TestStep id="EIDb045db18-66c2-48b7-a58e-010f385a29bc">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID0d6c0857-2516-426f-9354-82447f40eb3c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4d5819ec-2ade-43e0-84cf-d7e610210f2b">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDb045db18-66c2-48b7-a58e-010f385a29bc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID42008144-a624-4393-94a4-cc3a3c35716f">
          <testSteps>
            <TestStep id="EID9e033a7f-c92e-4fc0-8050-b498cab285ef">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EID42008144-a624-4393-94a4-cc3a3c35716f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID67acd652-7f0b-47a7-98a5-c93aa098db96">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EID9e033a7f-c92e-4fc0-8050-b498cab285ef"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9d6caad8-2cfd-4afd-b864-6d9e777b3d90">
          <testSteps>
            <TestStep id="EID0503c4f2-1831-4ab2-8441-a32fb5fb59c6">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID9d6caad8-2cfd-4afd-b864-6d9e777b3d90"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6c597ba9-4616-4c52-ad86-74eacf57e781">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID0503c4f2-1831-4ab2-8441-a32fb5fb59c6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5f3b07e7-e472-4a60-9823-673108d73367">
          <testSteps>
            <TestStep id="EID569208a9-d7e1-453a-bc69-1d85bb832f24">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID5f3b07e7-e472-4a60-9823-673108d73367"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID604f919a-936c-464b-8846-ad0112fcb796">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID569208a9-d7e1-453a-bc69-1d85bb832f24"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2e675016-4502-477c-973e-ba63197f88b2">
          <testSteps>
            <TestStep id="EID8983fc07-d4e6-4797-baaf-f3e1ec8d095e">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID2e675016-4502-477c-973e-ba63197f88b2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb25c2348-f908-418b-9366-450f292488ac">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID8983fc07-d4e6-4797-baaf-f3e1ec8d095e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID97f5e983-2a14-4cad-987e-66debb516723">
          <testSteps>
            <TestStep id="EID1534df3c-2838-46e2-94eb-424b92a3d377">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EID97f5e983-2a14-4cad-987e-66debb516723"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6cf2c6b0-2c33-4284-a6d1-9d8a193f1b3f">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EID1534df3c-2838-46e2-94eb-424b92a3d377"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID991ece95-5abb-4c32-9d80-237bfa9a9cac">
          <testSteps>
            <TestStep id="EID295eac61-9d7a-47bc-a3bb-bb81852b8363">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID991ece95-5abb-4c32-9d80-237bfa9a9cac"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbe6cd3c6-7a42-49fd-837a-97cb21339a31">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID295eac61-9d7a-47bc-a3bb-bb81852b8363"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc4db08d0-6a05-4d0d-a8a5-964542d2cea7">
          <testSteps>
            <TestStep id="EID45d78fc1-065f-4706-9b57-f5a1c364c51f">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EIDc4db08d0-6a05-4d0d-a8a5-964542d2cea7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc30fe136-9fdd-46aa-8cc4-83bf649bc099">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID45d78fc1-065f-4706-9b57-f5a1c364c51f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6ea7c525-2fba-4be4-8c20-6d8b4e4328b5">
          <testSteps>
            <TestStep id="EID6c430d26-cbcd-47f0-a53a-871bcace22dc">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID6ea7c525-2fba-4be4-8c20-6d8b4e4328b5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID98c09f98-f9c5-4aa8-94a9-250e851ec8a5">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID6c430d26-cbcd-47f0-a53a-871bcace22dc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID806fa611-ea52-4a0a-9c51-965b27dfa691">
          <testSteps>
            <TestStep id="EID6314c66e-ce1a-4515-b906-d2c389f658e8">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EID806fa611-ea52-4a0a-9c51-965b27dfa691"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbdff7470-7e23-473a-b2d4-3c66e3f99367">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EID6314c66e-ce1a-4515-b906-d2c389f658e8"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID039f3473-5b4d-465c-a578-0f6270df97a5">
      <label>M­D_­Reference­System</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID9e23d616-15d5-42b8-af9e-ea11e36eb446">
          <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
          <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
          <parent ref="EID039f3473-5b4d-465c-a578-0f6270df97a5"/>
          <testSteps>
            <TestStep id="EID7a246719-3557-427d-9103-03a990043925">
              <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
              <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
              <parent ref="EID9e23d616-15d5-42b8-af9e-ea11e36eb446"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2a8749b5-19b1-4cfb-b302-078e89164c0f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID7a246719-3557-427d-9103-03a990043925"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ReferenceSystem', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID25d63d6b-966b-4ec3-b0e6-22dd23f19ea0">
          <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
          <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
          <parent ref="EID039f3473-5b4d-465c-a578-0f6270df97a5"/>
          <testSteps>
            <TestStep id="EID11a000ab-77d9-4e31-ae8c-e5a7b3a249af">
              <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
              <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
              <parent ref="EID25d63d6b-966b-4ec3-b0e6-22dd23f19ea0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0221bbfc-b42e-4900-9043-d6e702792394">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID11a000ab-77d9-4e31-ae8c-e5a7b3a249af"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'referenceSystemIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID172fd0b1-f665-4de9-93ec-b8a6be61e6b1">
      <label>E­X_­Geographic­Bounding­Box</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID564eff56-4d3c-4dde-b7d7-f88ca1ddca04">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID172fd0b1-f665-4de9-93ec-b8a6be61e6b1"/>
          <testSteps>
            <TestStep id="EID0229e2b4-cd85-4d5b-bede-b2afc4f2ec52">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID564eff56-4d3c-4dde-b7d7-f88ca1ddca04"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd1934fec-d4ca-4d25-ab7e-a778cbb74a80">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID0229e2b4-cd85-4d5b-bede-b2afc4f2ec52"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='EX_GeographicBoundingBox' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'EX_GeographicBoundingBox', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9546f1eb-6095-4d2f-955a-d5214d1cf093">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID172fd0b1-f665-4de9-93ec-b8a6be61e6b1"/>
          <testSteps>
            <TestStep id="EIDa56ac7f7-0bbc-42aa-88db-a77c38b8de4f">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID9546f1eb-6095-4d2f-955a-d5214d1cf093"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa197d755-1a31-4185-80bd-f5977c6fd30d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDa56ac7f7-0bbc-42aa-88db-a77c38b8de4f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='EX_GeographicBoundingBox' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDfbfc1126-8f44-4d51-b9ca-03eb40cdb83d">
      <label>CI_Contact</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID94c8bbbf-9337-4740-9f61-7ed73d6310fa">
          <testSteps>
            <TestStep id="EID2460aad3-9f52-489c-a05e-c70044de4c8a">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
              <parent ref="EID94c8bbbf-9337-4740-9f61-7ed73d6310fa"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDba94d226-856f-46e0-b544-05c57c098a98">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
                  <parent ref="EID2460aad3-9f52-489c-a05e-c70044de4c8a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4bb8607b-4f01-4cf4-b438-c018d94f7f7d">
          <testSteps>
            <TestStep id="EIDa61ebe0a-019c-46eb-93d9-1ec5803eb91f">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EID4bb8607b-4f01-4cf4-b438-c018d94f7f7d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1ccfc450-528e-443f-92ff-29cee7cb73f0">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDa61ebe0a-019c-46eb-93d9-1ec5803eb91f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID54503ba0-d5d6-4a10-8469-01129ce9dd0a">
          <testSteps>
            <TestStep id="EID682bcdfa-3f24-479d-bee2-f34bafb99292">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EID54503ba0-d5d6-4a10-8469-01129ce9dd0a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1a7cb4d2-a2a9-4f6d-800e-bd7c04b94fbe">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EID682bcdfa-3f24-479d-bee2-f34bafb99292"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6918510c-4861-4b49-805d-dc7ab90a0000">
          <testSteps>
            <TestStep id="EID7c5fc35c-8acc-4d5f-82f7-1abe7e4757d4">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
              <parent ref="EID6918510c-4861-4b49-805d-dc7ab90a0000"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID892e2144-120d-4391-a873-6aa804d5b9e0">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
                  <parent ref="EID7c5fc35c-8acc-4d5f-82f7-1abe7e4757d4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDae731e28-5e5c-4da2-a995-361d57b86da4">
          <testSteps>
            <TestStep id="EIDa69c8ada-cdec-4ba6-83af-a6da9114c592">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EIDae731e28-5e5c-4da2-a995-361d57b86da4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID581d80f5-f449-4046-8b52-5cded959caca">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDa69c8ada-cdec-4ba6-83af-a6da9114c592"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4ac525c5-f592-4d63-a0db-5811e6d5f7e9">
          <testSteps>
            <TestStep id="EIDab85ea4c-bd27-422b-82c3-69ce05b559df">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EID4ac525c5-f592-4d63-a0db-5811e6d5f7e9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd21f97ed-10bc-4a5e-bb31-37403075def3">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDab85ea4c-bd27-422b-82c3-69ce05b559df"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6245ca21-84ea-4f53-a61d-1eceb7783a0c">
          <testSteps>
            <TestStep id="EID909a6daa-474e-4591-97da-f3c28f889f42">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
              <parent ref="EID6245ca21-84ea-4f53-a61d-1eceb7783a0c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID496709be-9dc8-4bbf-a2ef-3f6a0f2c47f9">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
                  <parent ref="EID909a6daa-474e-4591-97da-f3c28f889f42"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc360390d-5ce6-446d-bf6a-562f70f8f393">
          <testSteps>
            <TestStep id="EID010c0363-9a19-4c40-b649-c4e6504f0fda">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EIDc360390d-5ce6-446d-bf6a-562f70f8f393"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4b9b2dde-6620-4eef-a4a5-9197da70620f">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EID010c0363-9a19-4c40-b649-c4e6504f0fda"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd5c3d1d7-c049-4b4e-9d14-690db72d2ce9">
          <testSteps>
            <TestStep id="EID1bc737d0-7aa5-405f-8f3f-638f1ee8edaa">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EIDd5c3d1d7-c049-4b4e-9d14-690db72d2ce9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7b7b3209-a15f-482d-8727-c2210f284371">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EID1bc737d0-7aa5-405f-8f3f-638f1ee8edaa"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID3cbaf671-7e7b-4c9a-9ed2-165cacc26636">
      <label>MD_Resolution</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDb044b797-f834-4309-ace0-62cddd89a062">
          <testSteps>
            <TestStep id="EID98666e71-ed82-4e95-b094-ecb3d222b478">
              <label>ISO-Element Nr. 59: Auflösung</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Resolution: eines der Elemente equivalentScale oder distance muss belegt sein.]]></description>
              <parent ref="EIDb044b797-f834-4309-ace0-62cddd89a062"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID02fec216-7205-4d91-9446-1a27cb0302f3">
                  <label>ISO-Element Nr. 59: Auflösung</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Resolution: eines der Elemente equivalentScale oder distance muss belegt sein.]]></description>
                  <parent ref="EID98666e71-ed82-4e95-b094-ecb3d222b478"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_Resolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='equivalentScale' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'equivalentScale', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_Resolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='distance' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distance', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID5daa1f0d-e114-4ec2-b431-29db7c72c298">
      <label>D­Q_­Quantitative­Result</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID157845b8-039c-4f1c-a8dc-ec55e9ba8c14">
          <label>ISO-Element Nr. 134: value­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID5daa1f0d-e114-4ec2-b431-29db7c72c298"/>
          <testSteps>
            <TestStep id="EID98b0e000-9ec4-4bef-a65a-f493535cf47d">
              <label>ISO-Element Nr. 134: value­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID157845b8-039c-4f1c-a8dc-ec55e9ba8c14"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4c286bd7-c0b2-488e-82a6-cfed1d2cd6e5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'valueType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID98b0e000-9ec4-4bef-a65a-f493535cf47d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_QuantitativeResult' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='valueType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_QuantitativeResult', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID58370276-2713-46ce-95f0-3efc0a074632">
      <label>M­D_­Application­Schema­Information</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID9fcf297a-e609-4ead-a028-278b499f0dc0">
          <label>ISO-Element Nr. 324: schema­Ascii</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58370276-2713-46ce-95f0-3efc0a074632"/>
          <testSteps>
            <TestStep id="EID216d990b-460b-45d4-ad06-5c2c8ed355c7">
              <label>ISO-Element Nr. 324: schema­Ascii</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID9fcf297a-e609-4ead-a028-278b499f0dc0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID21164cf8-35ba-4d9c-ab2d-da76550240be">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'schemaAscii' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID216d990b-460b-45d4-ad06-5c2c8ed355c7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='schemaAscii' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6e1b5d70-a5db-483c-a357-002b5fcf92f1">
          <label>ISO-Element Nr. 325: graphics­File</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58370276-2713-46ce-95f0-3efc0a074632"/>
          <testSteps>
            <TestStep id="EIDff0e34f2-d508-4b0e-80e8-e52f38359955">
              <label>ISO-Element Nr. 325: graphics­File</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6e1b5d70-a5db-483c-a357-002b5fcf92f1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID31a0cfe6-386d-4b99-bddd-0a1be0aa3786">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'graphicsFile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDff0e34f2-d508-4b0e-80e8-e52f38359955"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='graphicsFile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID79d784e8-8682-4e87-b50f-6f8068ec2209">
          <label>ISO-Element Nr. 326: software­Development­File</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58370276-2713-46ce-95f0-3efc0a074632"/>
          <testSteps>
            <TestStep id="EID8d3c729e-6da1-4bd4-86a9-e8234d964a4e">
              <label>ISO-Element Nr. 326: software­Development­File</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID79d784e8-8682-4e87-b50f-6f8068ec2209"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1e8b70c7-398b-4966-b1fe-f14238471ecf">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'softwareDevelopmentFile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8d3c729e-6da1-4bd4-86a9-e8234d964a4e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='softwareDevelopmentFile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID085148c9-a7b5-4be4-80fb-0bf655cf33bf">
          <label>ISO-Element Nr. 327: software­Development­File­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58370276-2713-46ce-95f0-3efc0a074632"/>
          <testSteps>
            <TestStep id="EID4fe5c232-e526-40c9-836e-678c09c7630f">
              <label>ISO-Element Nr. 327: software­Development­File­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID085148c9-a7b5-4be4-80fb-0bf655cf33bf"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf739ae3d-32cb-4be5-beac-8b8b2f927c98">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'softwareDevelopmentFileFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID4fe5c232-e526-40c9-836e-678c09c7630f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='softwareDevelopmentFileFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDe8172410-bd42-49da-a2bf-9b0b79221d76">
      <label>L­I_­Process­Step</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID179b8254-6a07-4a89-9d7c-7e8301cce88d">
          <label>ISO-Element Nr. 88: rationale</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe8172410-bd42-49da-a2bf-9b0b79221d76"/>
          <testSteps>
            <TestStep id="EID9fede7bc-17fb-4288-a415-2d68b7338e2d">
              <label>ISO-Element Nr. 88: rationale</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID179b8254-6a07-4a89-9d7c-7e8301cce88d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe2cfb6ff-5c0d-4962-a3ff-9d18c73f6be0">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'rationale' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9fede7bc-17fb-4288-a415-2d68b7338e2d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='rationale' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID49fa2d47-46d0-4c46-80de-403bcffdf14e">
          <label>ISO-Element Nr. 90: processor</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe8172410-bd42-49da-a2bf-9b0b79221d76"/>
          <testSteps>
            <TestStep id="EIDdc02ed87-26b1-483e-8230-c8a0f886a697">
              <label>ISO-Element Nr. 90: processor</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID49fa2d47-46d0-4c46-80de-403bcffdf14e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdd4f25a6-ccd9-48d2-af0e-f600bd92d990">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'processor' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdc02ed87-26b1-483e-8230-c8a0f886a697"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='processor' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1ee55954-486b-406d-860f-40c5ce61eed7">
          <label>ISO-Element Nr. 91: source</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe8172410-bd42-49da-a2bf-9b0b79221d76"/>
          <testSteps>
            <TestStep id="EIDc77f3839-d3a0-42d4-9390-ff79ad735b5f">
              <label>ISO-Element Nr. 91: source</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1ee55954-486b-406d-860f-40c5ce61eed7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb7eb243d-5d1f-428e-b8b2-d37fc6986900">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'source' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc77f3839-d3a0-42d4-9390-ff79ad735b5f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='source' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDf7788728-454d-4b1c-b72e-f530e0e00e83">
      <label>M­D_­Distributor</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID2305b37a-bee4-48ad-ba9e-1a86cbe515ff">
          <label>ISO-Element Nr. 282: distributor­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf7788728-454d-4b1c-b72e-f530e0e00e83"/>
          <testSteps>
            <TestStep id="EID0d94f2cc-8371-436d-a459-498dee80ed04">
              <label>ISO-Element Nr. 282: distributor­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID2305b37a-bee4-48ad-ba9e-1a86cbe515ff"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID63246a4a-99f2-4420-8d94-d5549cf84da9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributorFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID0d94f2cc-8371-436d-a459-498dee80ed04"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributorFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distributor', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6e6fad9f-29a8-4486-bcaf-b0127d0beee3">
          <label>ISO-Element Nr. 283: distributor­Transfer­Options</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf7788728-454d-4b1c-b72e-f530e0e00e83"/>
          <testSteps>
            <TestStep id="EID88d3f86f-7e06-4092-9997-96f76ac85cca">
              <label>ISO-Element Nr. 283: distributor­Transfer­Options</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6e6fad9f-29a8-4486-bcaf-b0127d0beee3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe874d2a8-25b2-4d47-9c63-ac1d2f447aff">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributorTransferOptions' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID88d3f86f-7e06-4092-9997-96f76ac85cca"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributorTransferOptions' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distributor', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID4d059525-407b-4873-86a8-39bf1a66973f">
      <label>C­I_­Online­Resource</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDd517e349-4e25-48d8-a30e-572f622e1dbb">
          <label>ISO-Element Nr. 398: protocol</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4d059525-407b-4873-86a8-39bf1a66973f"/>
          <testSteps>
            <TestStep id="EID8a4df2b4-2f89-4e82-9be1-ab1c9e1f1e18">
              <label>ISO-Element Nr. 398: protocol</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDd517e349-4e25-48d8-a30e-572f622e1dbb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2f2c33c3-b0cd-4bca-9a24-d55c0de9f023">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'protocol' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8a4df2b4-2f89-4e82-9be1-ab1c9e1f1e18"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='protocol' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3ad3603b-e24b-4185-a3ff-b654374bb7e6">
          <label>ISO-Element Nr. 399: application­Profile</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4d059525-407b-4873-86a8-39bf1a66973f"/>
          <testSteps>
            <TestStep id="EID5d273967-cb69-4344-9d67-039cf4d01beb">
              <label>ISO-Element Nr. 399: application­Profile</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3ad3603b-e24b-4185-a3ff-b654374bb7e6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID511e5ab3-3fdb-4c41-ad95-a8a70eb73683">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'applicationProfile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID5d273967-cb69-4344-9d67-039cf4d01beb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='applicationProfile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe1eac994-6d8a-411d-8f6a-f27b80498b5c">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EID4d059525-407b-4873-86a8-39bf1a66973f"/>
          <testSteps>
            <TestStep id="EIDac4a67c7-f91a-41f3-8d64-bec71e1919e7">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EIDe1eac994-6d8a-411d-8f6a-f27b80498b5c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcc9dc8a5-a1ef-47a8-897a-0bc5fd40c584">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDac4a67c7-f91a-41f3-8d64-bec71e1919e7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b">
      <label>M­D_­Aggregate­Information</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDcb4383e2-c8c4-454a-83d1-6d4dcd175d98">
          <label>ISO-Element Nr. 66.2: aggregate­Data­Set­Name</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID6e44cad4-65cd-4e72-a9f8-9c0ead4b27fc">
              <label>ISO-Element Nr. 66.2: aggregate­Data­Set­Name</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDcb4383e2-c8c4-454a-83d1-6d4dcd175d98"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID45d266a7-cf34-405f-8c4a-89c418c57683">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetName' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID6e44cad4-65cd-4e72-a9f8-9c0ead4b27fc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='aggregateDataSetName' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9fd3e589-a9d6-4e21-a17a-b6cb1a558a2e">
          <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID9414eab3-17d7-48c8-a6d0-79f6b1d9b37f">
              <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
              <parent ref="EID9fd3e589-a9d6-4e21-a17a-b6cb1a558a2e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDab951db1-d46e-4c56-8540-c5318a670dc3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID9414eab3-17d7-48c8-a6d0-79f6b1d9b37f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='aggregateDataSetIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc322acdb-f621-46e5-bf8f-ff122e53cad8">
          <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID0c055e49-5b6a-41ce-a444-45b6a8dc52ec">
              <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
              <parent ref="EIDc322acdb-f621-46e5-bf8f-ff122e53cad8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID76711716-6a55-4fe8-8855-32f00fe07512">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID0c055e49-5b6a-41ce-a444-45b6a8dc52ec"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='aggregateDataSetIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'aggregateDataSetIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd9c3e36e-720b-4a69-8db7-f29e96dcfdeb">
          <label>ISO-Element Nr. 66.4: Assoziationstyp zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement bei Angabe von Informationen zu aggregierten Daten: der Assoziationstyp muss vorhanden sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt, nur "crossReference" ist zulässig.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID4bbd6ce7-fc4d-4e46-9c07-67f5b1b9b590">
              <label>ISO-Element Nr. 66.4: Assoziationstyp zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement bei Angabe von Informationen zu aggregierten Daten: der Assoziationstyp muss vorhanden sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt, nur "crossReference" ist zulässig.]]></description>
              <parent ref="EIDd9c3e36e-720b-4a69-8db7-f29e96dcfdeb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID44c78d94-4e1b-4144-a238-5d1cc436e4a1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'associationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>crossReference</li></ul>]]></description>
                  <parent ref="EID4bbd6ce7-fc4d-4e46-9c07-67f5b1b9b590"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('crossReference')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='associationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'associationType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9255daec-f810-406b-9a7b-34364447468a">
          <label>ISO-Element Nr. 66.5: initiative­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID7ed19bc8-177c-4767-88ad-744ba285c883">
              <label>ISO-Element Nr. 66.5: initiative­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID9255daec-f810-406b-9a7b-34364447468a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID278f1c02-ef9f-485f-a149-829858561944">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'initiativeType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>operation</li><li>project</li><li>exercise</li><li>task</li><li>mission</li><li>process</li><li>program</li><li>collection</li><li>campaign</li><li>experiment</li><li>trial</li><li>sensor</li><li>platform</li><li>study</li><li>investigation</li></ul>]]></description>
                  <parent ref="EID7ed19bc8-177c-4767-88ad-744ba285c883"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('operation', 'project', 'exercise', 'task', 'mission', 'process', 'program', 'collection', 'campaign', 'experiment', 'trial', 'sensor', 'platform', 'study', 'investigation')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='initiativeType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'initiativeType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8e7ff67f-bf24-4c52-a1e1-167cda9a4dfc">
          <label>ISO-Element Nr. 66.5: initiative­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc8c9486-f3e5-4aa3-9161-dfca05d0c55b"/>
          <testSteps>
            <TestStep id="EID51d514ef-051a-48b7-9a8f-e62adfef1409">
              <label>ISO-Element Nr. 66.5: initiative­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID8e7ff67f-bf24-4c52-a1e1-167cda9a4dfc"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa01f7062-cb0d-431e-ba56-bb4630e70c74">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'initiativeType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID51d514ef-051a-48b7-9a8f-e62adfef1409"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='initiativeType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDa816fb1b-39fa-43e9-ac73-e44cba91b8c7">
      <label>MD_ScopeDescription</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDc606fd00-6ef1-4e03-8718-55709e3782df">
          <testSteps>
            <TestStep id="EID1e537ab0-1821-4b7b-a0c6-7858830be1d5">
              <label>ISO-Element Nr. 149: Beschreibung des Geltungsbereichs</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_ScopeDescription: eines der Elemente attributes, features, dataset oder distance muss belegt sein.]]></description>
              <parent ref="EIDc606fd00-6ef1-4e03-8718-55709e3782df"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf0a53d19-6682-4e63-84c3-05fc47b51d70">
                  <label>ISO-Element Nr. 149: Beschreibung des Geltungsbereichs</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_ScopeDescription: eines der Elemente attributes, features, dataset oder distance muss belegt sein.]]></description>
                  <parent ref="EID1e537ab0-1821-4b7b-a0c6-7858830be1d5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='attributes' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'attributes', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='features' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'features', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='dataset' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'dataset', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='other' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'other', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb">
      <label>M­D_­Image­Description</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID4e7a02fa-b129-41c9-81fe-e766460dec5b">
          <label>ISO-Element Nr. 242: dimension</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDba71fa5b-56bc-4045-acc1-49f121fbbc19">
              <label>ISO-Element Nr. 242: dimension</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4e7a02fa-b129-41c9-81fe-e766460dec5b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa1af533a-5b4f-418f-8c76-93704c4a4137">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dimension' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDba71fa5b-56bc-4045-acc1-49f121fbbc19"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dimension' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd5d01971-71b1-465a-8a11-902f3577eb99">
          <label>ISO-Element Nr. 244: illumination­Elevation­Angle</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID45e27cdc-93fa-4f87-a630-7b03cc2a893a">
              <label>ISO-Element Nr. 244: illumination­Elevation­Angle</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDd5d01971-71b1-465a-8a11-902f3577eb99"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID52b75c19-62cc-4f67-92de-39870abd9652">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'illuminationElevationAngle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID45e27cdc-93fa-4f87-a630-7b03cc2a893a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='illuminationElevationAngle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID55b5b436-ac9a-4d86-9327-500a3e2206c3">
          <label>ISO-Element Nr. 245: illumination­Azimuth­Angle</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID03c512ac-c244-4f9d-8602-a7988effccf4">
              <label>ISO-Element Nr. 245: illumination­Azimuth­Angle</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID55b5b436-ac9a-4d86-9327-500a3e2206c3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc4f0cb2f-37c5-4852-ac33-a004e542c659">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'illuminationAzimuthAngle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID03c512ac-c244-4f9d-8602-a7988effccf4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='illuminationAzimuthAngle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc72d6c8f-7e12-469b-852c-3e9b83b3f019">
          <label>ISO-Element Nr. 246: imaging­Condition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID2836bd08-a312-4c48-9c8f-9c2db23397b4">
              <label>ISO-Element Nr. 246: imaging­Condition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDc72d6c8f-7e12-469b-852c-3e9b83b3f019"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe20a2cba-7e2f-4ffb-97b1-4aedaf3858a3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imagingCondition' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>terrainMasking</li><li>heavySmokeOrDust</li><li>rain</li><li>snow</li><li>blurredImage</li><li>semiDarkness</li><li>night</li><li>shadow</li><li>cloud</li><li>degradingObliquity</li><li>fog</li></ul>]]></description>
                  <parent ref="EID2836bd08-a312-4c48-9c8f-9c2db23397b4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('terrainMasking', 'heavySmokeOrDust', 'rain', 'snow', 'blurredImage', 'semiDarkness', 'night', 'shadow', 'cloud', 'degradingObliquity', 'fog')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='imagingCondition' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'imagingCondition', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc5fcdbb2-19b8-4c75-b2fd-72811027c657">
          <label>ISO-Element Nr. 246: imaging­Condition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDc2948e65-888d-4843-84d0-487d647e2b46">
              <label>ISO-Element Nr. 246: imaging­Condition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDc5fcdbb2-19b8-4c75-b2fd-72811027c657"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf49a2b59-a669-410d-95f5-bb38b64834c7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imagingCondition' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc2948e65-888d-4843-84d0-487d647e2b46"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='imagingCondition' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID87b37e1b-5e97-42c3-99c4-71a6007a58d1">
          <label>ISO-Element Nr. 247: image­Quality­Code</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDda74ebbd-020b-4287-b919-502fe9af64e6">
              <label>ISO-Element Nr. 247: image­Quality­Code</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID87b37e1b-5e97-42c3-99c4-71a6007a58d1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID46641a61-0fb6-4d40-8f70-bcb2c5cc1586">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imageQualityCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDda74ebbd-020b-4287-b919-502fe9af64e6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='imageQualityCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID22540ca5-5fc0-4f61-869b-ab9fd38826f6">
          <label>ISO-Element Nr. 249: processing­Level­Code</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID573e0f32-1efb-4677-8d9e-50b82fffeaa4">
              <label>ISO-Element Nr. 249: processing­Level­Code</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID22540ca5-5fc0-4f61-869b-ab9fd38826f6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID48164a32-b2ff-4f25-a64c-e6ec8b500889">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'processingLevelCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID573e0f32-1efb-4677-8d9e-50b82fffeaa4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='processingLevelCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID96d33519-9853-4491-b0ac-3f10b180f509">
          <label>ISO-Element Nr. 250: compression­Generation­Quantity</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID9bc9fb9a-6e60-4583-9446-f9247d95dfe0">
              <label>ISO-Element Nr. 250: compression­Generation­Quantity</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID96d33519-9853-4491-b0ac-3f10b180f509"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9412eb38-b33c-4d5d-9725-4a907e1327d9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'compressionGenerationQuantity' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9bc9fb9a-6e60-4583-9446-f9247d95dfe0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='compressionGenerationQuantity' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3ed19a18-3410-4c66-b5a1-3222999755d8">
          <label>ISO-Element Nr. 251: triangulation­Indicator</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDc43bb09f-62c1-4611-b9d7-be01b3a54754">
              <label>ISO-Element Nr. 251: triangulation­Indicator</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3ed19a18-3410-4c66-b5a1-3222999755d8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID122149b7-b590-4328-9ad4-d0b633b56ea5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'triangulationIndicator' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc43bb09f-62c1-4611-b9d7-be01b3a54754"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='triangulationIndicator' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID94e5b7e3-1726-48b7-b52e-903057911735">
          <label>ISO-Element Nr. 252: radiometric­Calibration­Data­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID2f6cefa8-f047-4615-b2ab-790c20191bd0">
              <label>ISO-Element Nr. 252: radiometric­Calibration­Data­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID94e5b7e3-1726-48b7-b52e-903057911735"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfd22b00d-1215-4604-9750-31d406ecec99">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'radiometricCalibrationDataAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID2f6cefa8-f047-4615-b2ab-790c20191bd0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='radiometricCalibrationDataAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb66151ff-7c69-4bdf-a70b-e5c899f5ee9c">
          <label>ISO-Element Nr. 253: camera­Calibration­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDfc6e2a89-9325-4ba6-80c7-06d61426ed9f">
              <label>ISO-Element Nr. 253: camera­Calibration­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDb66151ff-7c69-4bdf-a70b-e5c899f5ee9c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID088e0a2c-a173-4314-a023-0c14b0b0040c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'cameraCalibrationInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDfc6e2a89-9325-4ba6-80c7-06d61426ed9f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='cameraCalibrationInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID80231942-3d03-4139-b526-f54180983fd3">
          <label>ISO-Element Nr. 254: film­Distortion­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EIDe9a05e05-cc2c-4045-839c-037627c52941">
              <label>ISO-Element Nr. 254: film­Distortion­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID80231942-3d03-4139-b526-f54180983fd3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcfd563da-a016-4f30-ad9c-967bab76e789">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'filmDistortionInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDe9a05e05-cc2c-4045-839c-037627c52941"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='filmDistortionInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf5851eaf-4fa5-4c74-89e8-c05b1184cbc5">
          <label>ISO-Element Nr. 255: lens­Distortion­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID9ffebe61-7455-4712-bb6f-8e19913ba6fb"/>
          <testSteps>
            <TestStep id="EID998d4b83-639f-4c98-9e34-4c47a54575a1">
              <label>ISO-Element Nr. 255: lens­Distortion­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf5851eaf-4fa5-4c74-89e8-c05b1184cbc5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfabe1376-a9e2-4829-9a8e-b324b15cc001">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'lensDistortionInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID998d4b83-639f-4c98-9e34-4c47a54575a1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='lensDistortionInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29">
      <label>S­V_­Service­Identification</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID129de528-7291-45aa-b53d-48ab45d161ad">
          <label>ISO-Element Nr. 27: credit</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EIDed4626bc-464e-4435-a15c-5e33ac56e61e">
              <label>ISO-Element Nr. 27: credit</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID129de528-7291-45aa-b53d-48ab45d161ad"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID19aa3a52-3fb9-4253-ae90-e515d6c3388a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'credit' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDed4626bc-464e-4435-a15c-5e33ac56e61e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='credit' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1a62ae4e-f24e-46c1-9aa3-1ab027dfb495">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
          <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID16a8c197-b5f5-4262-8474-a433dd5b863d">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EID1a62ae4e-f24e-46c1-9aa3-1ab027dfb495"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0e717f0c-bf9b-45b6-bf7c-1871f3f4edaa">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID16a8c197-b5f5-4262-8474-a433dd5b863d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb44c8276-dc8e-4a04-b6d1-c48bd8dae8c8">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
          <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EIDeddc99c5-8f78-4f14-8c3b-f84bf7725fec">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EIDb44c8276-dc8e-4a04-b6d1-c48bd8dae8c8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd941375c-1751-4f45-a103-f322ed8169b9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDeddc99c5-8f78-4f14-8c3b-f84bf7725fec"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'pointOfContact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID36277048-b74d-4eaf-9f59-0fb78a5be421">
          <label>ISO-Element Nr. 32: resource­Format</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID99873375-b638-4c1f-a011-89d1d10e383b">
              <label>ISO-Element Nr. 32: resource­Format</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID36277048-b74d-4eaf-9f59-0fb78a5be421"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID610940fb-6a3a-467b-bcd0-14a23e2098f6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID99873375-b638-4c1f-a011-89d1d10e383b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8b5ca4de-366b-416c-8f25-2f9bb3077c3a">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID1704e957-7434-4329-bc09-4275459e0ef9">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID8b5ca4de-366b-416c-8f25-2f9bb3077c3a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID64b4b08e-b549-44b1-8ca2-8db4ef810409">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID1704e957-7434-4329-bc09-4275459e0ef9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID35cc82c7-f822-41d7-a953-cb0e59099af3">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID83db6628-af27-4cf7-9f4e-a1076853bb7b">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID35cc82c7-f822-41d7-a953-cb0e59099af3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID598f15e3-80a4-4c1b-8c50-00f465e02923">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID83db6628-af27-4cf7-9f4e-a1076853bb7b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'descriptiveKeywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0f6238b7-5b11-45d7-9d57-5be9d43de995">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EIDc4f57297-f691-462f-8d8c-ccaec2f5b4aa">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID0f6238b7-5b11-45d7-9d57-5be9d43de995"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3135af3a-6126-4358-bf37-bd11d5f36fb9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDc4f57297-f691-462f-8d8c-ccaec2f5b4aa"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID317db2af-4443-4066-8191-dfea72a8670e">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID6b54ba74-6585-49bf-b63c-91b9eb660669">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID317db2af-4443-4066-8191-dfea72a8670e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9939dcd3-8493-430d-896a-2c394fcadba9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID6b54ba74-6585-49bf-b63c-91b9eb660669"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'resourceConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa27da71d-a89c-41fb-82da-ffab8e9ca06d">
          <label>ISO-Element Nr. 35.1: aggregation­Info</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID9cb3d3c0-302e-492e-8970-d5d5c71d049c">
              <label>ISO-Element Nr. 35.1: aggregation­Info</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa27da71d-a89c-41fb-82da-ffab8e9ca06d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe23cc191-2af9-4834-b6a4-4b816436b82e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregationInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9cb3d3c0-302e-492e-8970-d5d5c71d049c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='aggregationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf328b556-a326-4480-bb57-88978c5225a3">
          <label>ISO-Element aus C.1: access­Properties</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID828628e7-266a-417f-9bbc-3fb56f69eaf0">
              <label>ISO-Element aus C.1: access­Properties</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf328b556-a326-4480-bb57-88978c5225a3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID377c2b61-ee76-4a89-b0ab-7a6c1bce2ab7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'accessProperties' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID828628e7-266a-417f-9bbc-3fb56f69eaf0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='accessProperties' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa48f3a59-5188-4c46-9882-7f5aeb5d4438">
          <label>ISO-Element aus C.1: restrictions</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EID7a20d542-c90d-4c10-ae79-1992f1565856">
              <label>ISO-Element aus C.1: restrictions</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa48f3a59-5188-4c46-9882-7f5aeb5d4438"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID22dd53ca-5ecf-4615-8f06-9c16012beb62">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'restrictions' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID7a20d542-c90d-4c10-ae79-1992f1565856"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='restrictions' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcc75b6dc-f9fb-41df-88d8-b189d7bfd066">
          <label>ISO-Element aus C.1: keywords</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EIDfa8af618-010b-40d7-a26f-494f33ed5e5e">
              <label>ISO-Element aus C.1: keywords</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDcc75b6dc-f9fb-41df-88d8-b189d7bfd066"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa7b9a4a2-1e02-46cd-828b-403638cb544c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'keywords' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDfa8af618-010b-40d7-a26f-494f33ed5e5e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='keywords' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1e4c48f2-15e1-4d82-b93b-3210f7293f87">
          <label>ISO-Element aus C.1: coupled­Resource</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID106547b5-0d1c-436e-a6a2-6d40b49a3d29"/>
          <testSteps>
            <TestStep id="EIDbc451252-67c8-4fe3-b6b9-644143f1ab46">
              <label>ISO-Element aus C.1: coupled­Resource</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1e4c48f2-15e1-4d82-b93b-3210f7293f87"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID98bacf59-d968-466d-8d43-27054dfb0446">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'coupledResource' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDbc451252-67c8-4fe3-b6b9-644143f1ab46"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='coupledResource' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID397e5253-32d8-4588-9538-fd23d13beb3d">
      <label>C­I_­Responsible­Party</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDd704e0ea-2ac6-4222-a15a-7148473d5dd5">
          <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Namen der Organisation muss vorhanden sein.]]></description>
          <parent ref="EID397e5253-32d8-4588-9538-fd23d13beb3d"/>
          <testSteps>
            <TestStep id="EID832d1801-e08c-4829-a028-27baaaf253af">
              <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Namen der Organisation muss vorhanden sein.]]></description>
              <parent ref="EIDd704e0ea-2ac6-4222-a15a-7148473d5dd5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4f72cef2-7bf7-48c3-a436-c751c8552a47">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'organisationName' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID832d1801-e08c-4829-a028-27baaaf253af"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='organisationName' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6a482223-33f6-4d0f-8d26-66bf1e5bc062">
          <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Namen der Organisation muss vorhanden sein.]]></description>
          <parent ref="EID397e5253-32d8-4588-9538-fd23d13beb3d"/>
          <testSteps>
            <TestStep id="EIDe620e6d2-c441-4807-8e81-109fe4eac02a">
              <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Namen der Organisation muss vorhanden sein.]]></description>
              <parent ref="EID6a482223-33f6-4d0f-8d26-66bf1e5bc062"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID14dc7cdb-9f49-44ea-9037-4f54f30f3cec">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'organisationName' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDe620e6d2-c441-4807-8e81-109fe4eac02a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='organisationName' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'organisationName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbb96da67-0beb-492b-8bfa-0c31d3093d6d">
          <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: die Funktion/Rolle der Organisation muss vorhanden sein. Für Kontakte im Kontext "zuständige Stelle für die Metadaten" ist mindestens 1x die Funktion "pointOfContact" zu verwenden.]]></description>
          <parent ref="EID397e5253-32d8-4588-9538-fd23d13beb3d"/>
          <testSteps>
            <TestStep id="EID17548ce4-40e1-48af-8c37-b69e06920a14">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: die Funktion/Rolle der Organisation muss vorhanden sein. Für Kontakte im Kontext "zuständige Stelle für die Metadaten" ist mindestens 1x die Funktion "pointOfContact" zu verwenden.]]></description>
              <parent ref="EIDbb96da67-0beb-492b-8bfa-0c31d3093d6d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8c45b2f5-1f79-4ad4-ba5c-b3cb42a45661">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'role' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>custodian</li><li>processor</li><li>publisher</li><li>originator</li><li>pointOfContact</li><li>user</li><li>distributor</li><li>resourceProvider</li><li>owner</li><li>principalInvestigator</li><li>author</li></ul>]]></description>
                  <parent ref="EID17548ce4-40e1-48af-8c37-b69e06920a14"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('custodian', 'processor', 'publisher', 'originator', 'pointOfContact', 'user', 'distributor', 'resourceProvider', 'owner', 'principalInvestigator', 'author')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'role', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDa3ceccda-33a3-4625-b50f-272bb06b9c28">
      <label>M­D_­Identifier</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID876f18d7-46b7-4f81-a1a3-d5a3372125bd">
          <label>ISO-Element Nr. 206: authority</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa3ceccda-33a3-4625-b50f-272bb06b9c28"/>
          <testSteps>
            <TestStep id="EIDee2baee5-f666-4e19-9125-82bd43a90da1">
              <label>ISO-Element Nr. 206: authority</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID876f18d7-46b7-4f81-a1a3-d5a3372125bd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID21da0edb-5e28-4bb7-8282-ae69caa422c7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'authority' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDee2baee5-f666-4e19-9125-82bd43a90da1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='authority' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDccd62e30-72a4-447d-a93a-d86f3b483039">
      <label>SV_ServiceIdentification</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDeb55469f-a5c0-492f-b69d-a1bf964a078e">
          <testSteps>
            <TestStep id="EID3dfb2c5c-1a9b-45d0-879b-d6e3087fa5fb">
              <label>ISO-Element C.1.6: Art der Kopplung</label>
              <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
              <parent ref="EIDeb55469f-a5c0-492f-b69d-a1bf964a078e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3d4f6ddd-cf5c-48b9-89c1-167482531640">
                  <label>ISO-Element C.1.6: Art der Kopplung</label>
                  <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
                  <parent ref="EID3dfb2c5c-1a9b-45d0-879b-d6e3087fa5fb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='operatesOn' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='couplingType' and namespace-uri()='http://www.isotc211.org/2005/srv'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'couplingType', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID48330286-ea1e-48fb-8d42-ba5954c9e21e">
          <testSteps>
            <TestStep id="EID9d7dba9f-6432-4df4-84a8-61f8f3a06f02">
              <label>ISO-Element C.1.8: verknüpfter Datenbestand</label>
              <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
              <parent ref="EID48330286-ea1e-48fb-8d42-ba5954c9e21e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID89e77891-c1f3-438e-9c86-e66344525305">
                  <label>ISO-Element C.1.8: verknüpfter Datenbestand</label>
                  <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
                  <parent ref="EID9d7dba9f-6432-4df4-84a8-61f8f3a06f02"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='couplingType' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='operatesOn' and namespace-uri()='http://www.isotc211.org/2005/srv'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'operatesOn', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID62555c48-b578-4170-a405-88bdc9a54a24">
          <testSteps>
            <TestStep id="EID24d22b6b-7cf9-47c3-8a6f-ad3fc7ab17c7">
              <label>ISO-Element C.1.6: Art der Kopplung</label>
              <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
              <parent ref="EID62555c48-b578-4170-a405-88bdc9a54a24"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf480c2c9-f26e-4248-be19-18e3953d070e">
                  <label>ISO-Element C.1.6: Art der Kopplung</label>
                  <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
                  <parent ref="EID24d22b6b-7cf9-47c3-8a6f-ad3fc7ab17c7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='operatesOn' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='couplingType' and namespace-uri()='http://www.isotc211.org/2005/srv'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'couplingType', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID68c28400-0bf4-4d02-807d-11338b40e64d">
          <testSteps>
            <TestStep id="EIDab82732b-0acc-4eef-92a3-98e7be59afe2">
              <label>ISO-Element C.1.8: verknüpfter Datenbestand</label>
              <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
              <parent ref="EID68c28400-0bf4-4d02-807d-11338b40e64d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7e796d4d-9fac-4ac7-a313-ec07f10eed4f">
                  <label>ISO-Element C.1.8: verknüpfter Datenbestand</label>
                  <description><![CDATA[bedingtes Pflichtelement in SV_ServiceIdentification: die Elemente operatesOn und couplingType sind beide anzugeben, sofern die Kopplung an einen Datenbestand gegeben ist.]]></description>
                  <parent ref="EIDab82732b-0acc-4eef-92a3-98e7be59afe2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='couplingType' and namespace-uri()='http://www.isotc211.org/2005/srv'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='operatesOn' and namespace-uri()='http://www.isotc211.org/2005/srv'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'operatesOn', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID05341ca1-e355-43d0-964e-4f1b53f28820">
      <label>M­D_­Distribution</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID520378eb-dfa0-4c96-a436-060f311015cb">
          <label>ISO-Element Nr. 271: Formatangabe</label>
          <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
          <parent ref="EID05341ca1-e355-43d0-964e-4f1b53f28820"/>
          <testSteps>
            <TestStep id="EID95cc532a-2bc7-48a7-9a55-0686d1cf7141">
              <label>ISO-Element Nr. 271: Formatangabe</label>
              <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
              <parent ref="EID520378eb-dfa0-4c96-a436-060f311015cb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb0eb5e9a-ada4-48f5-af02-fede424babca">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributionFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID95cc532a-2bc7-48a7-9a55-0686d1cf7141"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distribution' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributionFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distribution', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc557f84f-3313-4c6e-8fbb-8babe8bd2106">
          <label>ISO-Element Nr. 271: Formatangabe</label>
          <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
          <parent ref="EID05341ca1-e355-43d0-964e-4f1b53f28820"/>
          <testSteps>
            <TestStep id="EID0c4f6696-0909-4760-9f8d-e9cf07b981c0">
              <label>ISO-Element Nr. 271: Formatangabe</label>
              <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
              <parent ref="EIDc557f84f-3313-4c6e-8fbb-8babe8bd2106"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID78ad3009-b5ba-4b16-96bf-cfaf62ef5f7b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributionFormat' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID0c4f6696-0909-4760-9f8d-e9cf07b981c0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Distribution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='distributionFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'distributionFormat', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDf59865e3-068c-4578-b8b4-cb4014aab514">
      <label>M­D_­Maintenance­Information</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDcb4715f7-70ab-41ab-8b72-20537ebaf840">
          <label>ISO-Element Nr. 143: Pflegeintervall zur Laufendhaltung</label>
          <description><![CDATA[Pflichtelement in Angaben zur Laufendhaltung: das Pflegeintervall muss vorhanden sein.]]></description>
          <parent ref="EIDf59865e3-068c-4578-b8b4-cb4014aab514"/>
          <testSteps>
            <TestStep id="EID1c496824-6ed7-463d-a340-c45a70604d6d">
              <label>ISO-Element Nr. 143: Pflegeintervall zur Laufendhaltung</label>
              <description><![CDATA[Pflichtelement in Angaben zur Laufendhaltung: das Pflegeintervall muss vorhanden sein.]]></description>
              <parent ref="EIDcb4715f7-70ab-41ab-8b72-20537ebaf840"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID83fc6651-0bed-45d8-9388-774a04271886">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'maintenanceAndUpdateFrequency' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>irregular</li><li>continual</li><li>daily</li><li>biannually</li><li>monthly</li><li>quarterly</li><li>asNeeded</li><li>notPlanned</li><li>weekly</li><li>fortnightly</li><li>annually</li><li>unknown</li></ul>]]></description>
                  <parent ref="EID1c496824-6ed7-463d-a340-c45a70604d6d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('irregular', 'continual', 'daily', 'biannually', 'monthly', 'quarterly', 'asNeeded', 'notPlanned', 'weekly', 'fortnightly', 'annually', 'unknown')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='maintenanceAndUpdateFrequency' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'maintenanceAndUpdateFrequency', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID73df108c-49e1-45dd-b35a-5a8daab0f49a">
          <label>ISO-Element Nr. 147: update­Scope­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf59865e3-068c-4578-b8b4-cb4014aab514"/>
          <testSteps>
            <TestStep id="EID903d16ed-3458-48df-992c-4fc63e6fd8ba">
              <label>ISO-Element Nr. 147: update­Scope­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID73df108c-49e1-45dd-b35a-5a8daab0f49a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf408889d-1b7c-4c1d-98fc-0bca7a1f3151">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'updateScopeDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID903d16ed-3458-48df-992c-4fc63e6fd8ba"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='updateScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID725a0efd-b0d6-4ba8-ac56-16e2066ec0a2">
          <label>ISO-Element Nr. 8: verantwortliche Stelle Metadaten</label>
          <description><![CDATA[Pflichtelement: mindestens eine für die Metadaten verantwortliche Stelle muss angegeben sein.]]></description>
          <parent ref="EIDf59865e3-068c-4578-b8b4-cb4014aab514"/>
          <testSteps>
            <TestStep id="EID91d58ee5-417a-4459-9e64-74dda8cd3c98">
              <label>ISO-Element Nr. 8: verantwortliche Stelle Metadaten</label>
              <description><![CDATA[Pflichtelement: mindestens eine für die Metadaten verantwortliche Stelle muss angegeben sein.]]></description>
              <parent ref="EID725a0efd-b0d6-4ba8-ac56-16e2066ec0a2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID182bfd91-508e-4ce6-a184-fcad94e6e2f9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID91d58ee5-417a-4459-9e64-74dda8cd3c98"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID462f1c6b-404e-465d-9664-e142a3405701">
      <label>M­D_­Data­Identification</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDfc6ecc40-e22f-4aa7-bf0f-2d6917c3f434">
          <label>ISO-Element Nr. 27: credit</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID1ee66337-bd83-4376-99b1-b99c3c9dd18e">
              <label>ISO-Element Nr. 27: credit</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDfc6ecc40-e22f-4aa7-bf0f-2d6917c3f434"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcf39bf0a-c4dc-4f4c-9fc9-1e4baef04ba2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'credit' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1ee66337-bd83-4376-99b1-b99c3c9dd18e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='credit' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDfeda303e-ca3e-4922-bf19-5b16d086d201">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
          <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID9bcd4d0d-5b9a-4de6-be7c-47a847fc126e">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EIDfeda303e-ca3e-4922-bf19-5b16d086d201"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8ec6592e-d6f6-4938-8790-d4c55716bcb9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID9bcd4d0d-5b9a-4de6-be7c-47a847fc126e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID18b61d43-f703-4fe3-83d7-4ee5a32083b4">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
          <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDd2fee659-f45e-4f54-9138-34975fa87ef6">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EID18b61d43-f703-4fe3-83d7-4ee5a32083b4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID36d2c22a-2f76-4d43-930e-3af3df269d12">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDd2fee659-f45e-4f54-9138-34975fa87ef6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'pointOfContact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf1cc2214-563c-4725-b0cf-c41e1fcaeba4">
          <label>ISO-Element Nr. 32: resource­Format</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID08b5c2ca-b5aa-40ea-8364-9c74da8de964">
              <label>ISO-Element Nr. 32: resource­Format</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf1cc2214-563c-4725-b0cf-c41e1fcaeba4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID47529df5-1976-4661-a32c-414f5fbbc400">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID08b5c2ca-b5aa-40ea-8364-9c74da8de964"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDdccf23bd-2117-4627-9be2-132f216cd38b">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID1103c7ff-1d7c-4866-8f63-e2922c841269">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EIDdccf23bd-2117-4627-9be2-132f216cd38b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd09347b3-75fb-472e-8683-042c1f041bad">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID1103c7ff-1d7c-4866-8f63-e2922c841269"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID00e622d0-9a8b-43d6-8183-3597dc1efd33">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDa8657ca1-62a9-4a59-b5cd-ea1694fcc81c">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID00e622d0-9a8b-43d6-8183-3597dc1efd33"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf31b69a0-2d33-47e0-85ae-08666e5fb2f1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDa8657ca1-62a9-4a59-b5cd-ea1694fcc81c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'descriptiveKeywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4c85184d-29dd-4518-ace3-1529285d0e90">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID2d1ca4ce-8f4d-4e2b-89b6-0fd577c19df4">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID4c85184d-29dd-4518-ace3-1529285d0e90"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID48187044-8036-4e48-a45d-809382d2a9ec">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID2d1ca4ce-8f4d-4e2b-89b6-0fd577c19df4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb92cbe49-26fb-47b9-96d7-542d9060079d">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDb8031e16-754b-464d-86ff-ac4d43be308f">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EIDb92cbe49-26fb-47b9-96d7-542d9060079d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID95eb371e-be85-4895-a224-06b1a843ec94">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDb8031e16-754b-464d-86ff-ac4d43be308f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'resourceConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID94f68e2c-7f57-44de-8632-97986be76f09">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID748867d0-53a6-4f78-878d-a69e9dd90ac3">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EID94f68e2c-7f57-44de-8632-97986be76f09"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID268060e0-c564-4547-be22-ae171ff991fd">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>tin</li><li>stereoModel</li><li>video</li><li>vector</li><li>textTable</li><li>grid</li></ul>]]></description>
                  <parent ref="EID748867d0-53a6-4f78-878d-a69e9dd90ac3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('tin', 'stereoModel', 'video', 'vector', 'textTable', 'grid')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'spatialRepresentationType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDab723776-07c8-439e-9bcb-51e9d3f3be24">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID207fda9d-cf9e-4c59-b369-b22cc37f0e96">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EIDab723776-07c8-439e-9bcb-51e9d3f3be24"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID73a0cd84-a7e8-413e-b721-ea237554de2b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID207fda9d-cf9e-4c59-b369-b22cc37f0e96"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID54a83742-628d-4150-bda0-d6445d9ea824">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID67bdea9c-29b6-42b8-8296-a557ee72475e">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EID54a83742-628d-4150-bda0-d6445d9ea824"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID398245ab-9e90-42da-8bfa-c184e22c201d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID67bdea9c-29b6-42b8-8296-a557ee72475e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'spatialRepresentationType', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0cd0954d-f399-4342-a16a-4cdb3d2bf239">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID5f2ff1e9-5001-4396-926f-1d5cd20bc3bf">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID0cd0954d-f399-4342-a16a-4cdb3d2bf239"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf0777c24-5c89-4152-a5ac-74d4e3ccf42e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID5f2ff1e9-5001-4396-926f-1d5cd20bc3bf"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc5e9d324-a7f4-4fa0-a8f4-5347bb2fdfa0">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDe280fbf0-7c19-4168-a65d-b4a772604159">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EIDc5e9d324-a7f4-4fa0-a8f4-5347bb2fdfa0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDed0cd85c-5006-47e1-a42f-fade6a9d4377">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>8859part1</li><li>utf8</li></ul>]]></description>
                  <parent ref="EIDe280fbf0-7c19-4168-a65d-b4a772604159"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('8859part1', 'utf8')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'characterSet', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6b564161-747d-49aa-85ed-78cdaba6161b">
          <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
          <description><![CDATA[Pflichtelement bei Typen Datensatz/-serie, Kachel und FeatureType: die ISO-Themenkategorie muss vorhanden sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDdc0e866e-e75c-4e84-9308-1fde61424c43">
              <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
              <description><![CDATA[Pflichtelement bei Typen Datensatz/-serie, Kachel und FeatureType: die ISO-Themenkategorie muss vorhanden sein.]]></description>
              <parent ref="EID6b564161-747d-49aa-85ed-78cdaba6161b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1d3a590c-039d-4b14-9659-43121a85e8f6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'topicCategory' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>biota</li><li>climatologyMeteorologyAtmosphere</li><li>economy</li><li>health</li><li>farming</li><li>location</li><li>inlandWaters</li><li>environment</li><li>society</li><li>transportation</li><li>utilitiesCommunication</li><li>elevation</li><li>intelligenceMilitary</li><li>geoscientificInformation</li><li>structure</li><li>oceans</li><li>imageryBaseMapsEarthCover</li><li>boundaries</li><li>planningCadastre</li></ul>]]></description>
                  <parent ref="EIDdc0e866e-e75c-4e84-9308-1fde61424c43"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('biota', 'climatologyMeteorologyAtmosphere', 'economy', 'health', 'farming', 'location', 'inlandWaters', 'environment', 'society', 'transportation', 'utilitiesCommunication', 'elevation', 'intelligenceMilitary', 'geoscientificInformation', 'structure', 'oceans', 'imageryBaseMapsEarthCover', 'boundaries', 'planningCadastre')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='topicCategory' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'topicCategory', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID93ae81e6-34b1-48a7-825a-eca15a2dd438">
          <label>ISO-Element Nr. 140: extent</label>
          <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EIDd137b85e-eaa0-4474-9a55-f6b8288d47fb">
              <label>ISO-Element Nr. 140: extent</label>
              <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
              <parent ref="EID93ae81e6-34b1-48a7-825a-eca15a2dd438"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID143ab0f4-5bb7-4c1e-a9d0-105c1353c6b7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extent' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDd137b85e-eaa0-4474-9a55-f6b8288d47fb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1bc530c1-cd44-4398-8868-371cd345759c">
          <label>ISO-Element Nr. 140: extent</label>
          <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
          <parent ref="EID462f1c6b-404e-465d-9664-e142a3405701"/>
          <testSteps>
            <TestStep id="EID93f9327f-4277-40b0-8f44-e446373683ca">
              <label>ISO-Element Nr. 140: extent</label>
              <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
              <parent ref="EID1bc530c1-cd44-4398-8868-371cd345759c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID91b3ae5a-5e4e-42bb-a233-6d4cfb1d7047">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extent' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID93f9327f-4277-40b0-8f44-e446373683ca"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extent', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID5b87c6fa-276e-408c-bec1-b080d118fa2b">
      <label>CI_Citation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID43974614-a157-4606-b595-2ee7532c85d1">
          <testSteps>
            <TestStep id="EID2b5336f2-cff4-4abf-994a-ca1ab63f88b5">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID43974614-a157-4606-b595-2ee7532c85d1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3375b454-2d37-4b32-9a40-7a3fc2a9c7b4">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID2b5336f2-cff4-4abf-994a-ca1ab63f88b5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5386f0c3-d1d8-4f4b-acfa-8abf3a29e90b">
          <testSteps>
            <TestStep id="EID6a3a2ab0-b02c-4059-a63f-67fe394ea3dc">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID5386f0c3-d1d8-4f4b-acfa-8abf3a29e90b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb6224684-6a5c-4adf-80cc-cfeaf83e8754">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID6a3a2ab0-b02c-4059-a63f-67fe394ea3dc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5c42edbb-6030-4e1d-b3bb-cb097e61edf1">
          <testSteps>
            <TestStep id="EIDb8d5d50f-6f17-4e5c-b7e3-531ebbfffba9">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID5c42edbb-6030-4e1d-b3bb-cb097e61edf1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8e742357-ff6c-4ba3-a978-a33a4ba1b8fe">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EIDb8d5d50f-6f17-4e5c-b7e3-531ebbfffba9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7779808d-1227-46e8-8bf1-ccf35260611f">
          <testSteps>
            <TestStep id="EID2e5c0c34-59db-4a9a-af9a-fcf92a1f2f3c">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID7779808d-1227-46e8-8bf1-ccf35260611f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe9b61c20-8bba-46c9-a59b-a6f80fa85854">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID2e5c0c34-59db-4a9a-af9a-fcf92a1f2f3c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID22cb095f-da2c-499b-bc9c-54daeed27fca">
      <label>RS_Identifier</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID5f19c552-28cf-4203-b8ec-3121df45d3ba">
          <testSteps>
            <TestStep id="EIDd2895e76-cd05-4454-b67a-4a7ba0dd5d7b">
              <label>ISO-Element Nr. 208.2: Version des Namensraums zum Identifikator des Referenzsystems</label>
              <description><![CDATA[bedingtes Pflichtelement in RS_Identifier: bei Belegung des Elements codeSpace muss das Element version ebenfalls belegt sein.]]></description>
              <parent ref="EID5f19c552-28cf-4203-b8ec-3121df45d3ba"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID345ef2d1-5225-44e2-b600-afe2618593a0">
                  <label>ISO-Element Nr. 208.2: Version des Namensraums zum Identifikator des Referenzsystems</label>
                  <description><![CDATA[bedingtes Pflichtelement in RS_Identifier: bei Belegung des Elements codeSpace muss das Element version ebenfalls belegt sein.]]></description>
                  <parent ref="EIDd2895e76-cd05-4454-b67a-4a7ba0dd5d7b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='codeSpace' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='version' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'version', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID5de1b394-e07f-4063-8a4d-a8c5902f35f0">
      <label>C­I_­Contact</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDa187a150-3026-4396-9f7b-24c33142dacf">
          <label>ISO-Element Nr. 391: hours­Of­Service</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID5de1b394-e07f-4063-8a4d-a8c5902f35f0"/>
          <testSteps>
            <TestStep id="EIDc0cd8087-0bd7-4ef6-9bd9-9a68b570fb6a">
              <label>ISO-Element Nr. 391: hours­Of­Service</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa187a150-3026-4396-9f7b-24c33142dacf"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6248dfb6-92b9-4e46-b256-c22f66daa924">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hoursOfService' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc0cd8087-0bd7-4ef6-9bd9-9a68b570fb6a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='hoursOfService' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID48f0241e-b0e1-40dc-94ba-58274fd12b53">
          <label>ISO-Element Nr. 392: contact­Instructions</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID5de1b394-e07f-4063-8a4d-a8c5902f35f0"/>
          <testSteps>
            <TestStep id="EIDed5f6183-8721-4c79-a195-782b80b35d30">
              <label>ISO-Element Nr. 392: contact­Instructions</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID48f0241e-b0e1-40dc-94ba-58274fd12b53"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID92faba18-bf92-4828-b5fa-d96f67923225">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contactInstructions' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDed5f6183-8721-4c79-a195-782b80b35d30"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='contactInstructions' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID88dce71e-4310-4dd4-86b4-faa10b8f944e">
      <label>MD_Metadata</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID57865cad-7bf2-4aa3-8f64-0e5a286e73fe">
          <testSteps>
            <TestStep id="EIDdeafee98-13de-40aa-8e79-cc1f90401b4a">
              <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
              <parent ref="EID57865cad-7bf2-4aa3-8f64-0e5a286e73fe"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8d353dd5-fd0a-4565-a724-65c27fb1a381">
                  <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
                  <parent ref="EIDdeafee98-13de-40aa-8e79-cc1f90401b4a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd' and text()='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='hierarchyLevelName' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'hierarchyLevelName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDfe13bd4f-801a-4b4f-abfa-8fc84e51ef13">
      <label>L­I_­Source</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID90940ed3-5345-4ee7-929b-59f731116915">
          <label>ISO-Element Nr. 401: description</label>
          <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
          <parent ref="EIDfe13bd4f-801a-4b4f-abfa-8fc84e51ef13"/>
          <testSteps>
            <TestStep id="EID42652638-c413-4b60-b9e1-6401c06db0d4">
              <label>ISO-Element Nr. 401: description</label>
              <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
              <parent ref="EID90940ed3-5345-4ee7-929b-59f731116915"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3d4acc3a-d169-4514-bb44-d2bae8702831">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'description' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID42652638-c413-4b60-b9e1-6401c06db0d4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf951e61e-f2f5-4702-8116-7f4cc3f87b92">
          <label>ISO-Element Nr. 401: description</label>
          <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
          <parent ref="EIDfe13bd4f-801a-4b4f-abfa-8fc84e51ef13"/>
          <testSteps>
            <TestStep id="EIDa5788d3e-f1a5-40f3-bb77-0b2b38c98cc9">
              <label>ISO-Element Nr. 401: description</label>
              <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
              <parent ref="EIDf951e61e-f2f5-4702-8116-7f4cc3f87b92"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe8f3884f-cfce-4fea-8e65-030a14662601">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'description' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDa5788d3e-f1a5-40f3-bb77-0b2b38c98cc9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID11e2c6be-a502-4ba8-b379-b148bf8c1f32">
          <label>ISO-Element Nr. 97: source­Extent</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDfe13bd4f-801a-4b4f-abfa-8fc84e51ef13"/>
          <testSteps>
            <TestStep id="EID6ceb3b49-78be-4a00-a72e-70cd76019f32">
              <label>ISO-Element Nr. 97: source­Extent</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID11e2c6be-a502-4ba8-b379-b148bf8c1f32"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5b01ee3d-096c-4764-a58e-ca38a09e5fbf">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'sourceExtent' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID6ceb3b49-78be-4a00-a72e-70cd76019f32"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='sourceExtent' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbf37bbf2-36ab-4f72-9da2-dc66b94efa25">
          <label>ISO-Element Nr. 98: source­Step</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDfe13bd4f-801a-4b4f-abfa-8fc84e51ef13"/>
          <testSteps>
            <TestStep id="EIDe841c72c-7913-40ef-afbc-6c134db41474">
              <label>ISO-Element Nr. 98: source­Step</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbf37bbf2-36ab-4f72-9da2-dc66b94efa25"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1d0f4386-4c05-4f83-84c2-a0a43aa954f3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'sourceStep' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDe841c72c-7913-40ef-afbc-6c134db41474"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='sourceStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID9e8a952e-9eaf-452d-8483-7efab340c99b">
      <label>D­Q_­Scope</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID4c168aef-68e5-45e1-9c92-93c88ff6b02c">
          <label>ISO-Element Nr. 139: Bezugsebene im Geltungsbereich der Qualitätssaussage</label>
          <description><![CDATA[Pflichtelement in Qualitätssaussagen: die Information über die Bezugsebene muss vorhanden sein; der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (nur "dataset", "series", "service", "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID9e8a952e-9eaf-452d-8483-7efab340c99b"/>
          <testSteps>
            <TestStep id="EID3c8014b5-b189-4ab3-bcd7-bf51c720908e">
              <label>ISO-Element Nr. 139: Bezugsebene im Geltungsbereich der Qualitätssaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätssaussagen: die Information über die Bezugsebene muss vorhanden sein; der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (nur "dataset", "series", "service", "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EID4c168aef-68e5-45e1-9c92-93c88ff6b02c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6006f137-69fd-4bf9-bb63-47b28a2a82cd">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'level' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>service</li><li>tile</li><li>featureType</li></ul>]]></description>
                  <parent ref="EID3c8014b5-b189-4ab3-bcd7-bf51c720908e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'service', 'tile', 'featureType')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'DQ_Scope', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'level', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID54164b9e-5630-418a-87b0-77919355b07c">
      <label>C­I_­Address</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDb3f4111d-d649-4c4d-9782-bfb30022bba4">
          <label>ISO-Element Nr.: 383: Angabe des Bundeslands</label>
          <description><![CDATA[Angabe des Bundeslands in Adressangaben: nur Wert "Nordrhein-Westfalen" ist zugelassen]]></description>
          <parent ref="EID54164b9e-5630-418a-87b0-77919355b07c"/>
          <testSteps>
            <TestStep id="EID13336c4f-b5ce-48e3-b3d6-1dd8241725fa">
              <label>ISO-Element Nr.: 383: Angabe des Bundeslands</label>
              <description><![CDATA[Angabe des Bundeslands in Adressangaben: nur Wert "Nordrhein-Westfalen" ist zugelassen]]></description>
              <parent ref="EIDb3f4111d-d649-4c4d-9782-bfb30022bba4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8e699b67-279e-4dec-93a9-5b28777a20c7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'administrativeArea' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>Nordrhein-Westfalen</li></ul>]]></description>
                  <parent ref="EID13336c4f-b5ce-48e3-b3d6-1dd8241725fa"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('Nordrhein-Westfalen')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='administrativeArea' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'administrativeArea', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa13ffc42-c177-47c1-9e8d-ce77b827c531">
          <label>ISO-Element Nr. 385: Angabe des Staats</label>
          <description><![CDATA[Angabe des Staats in Adressangaben: nur Wert "Deutschland" ist zugelassen]]></description>
          <parent ref="EID54164b9e-5630-418a-87b0-77919355b07c"/>
          <testSteps>
            <TestStep id="EIDe720beb3-4803-4d98-bc15-3b90537f0fb7">
              <label>ISO-Element Nr. 385: Angabe des Staats</label>
              <description><![CDATA[Angabe des Staats in Adressangaben: nur Wert "Deutschland" ist zugelassen]]></description>
              <parent ref="EIDa13ffc42-c177-47c1-9e8d-ce77b827c531"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID81f4beea-97f5-4dab-975a-9015d1246737">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'country' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>Deutschland</li></ul>]]></description>
                  <parent ref="EIDe720beb3-4803-4d98-bc15-3b90537f0fb7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('Deutschland')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='country' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'country', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcaeb0219-fd84-47ed-96e0-891ee5254a32">
          <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
          <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
          <parent ref="EID54164b9e-5630-418a-87b0-77919355b07c"/>
          <testSteps>
            <TestStep id="EID907f1955-8f40-4221-b752-18ee488470bd">
              <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
              <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
              <parent ref="EIDcaeb0219-fd84-47ed-96e0-891ee5254a32"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1319cd75-4ef2-415f-a433-fbc3d3741d1f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'electronicMailAddress' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID907f1955-8f40-4221-b752-18ee488470bd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='electronicMailAddress' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd3b676eb-c9fe-4c23-828a-eb941050c7e4">
          <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
          <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
          <parent ref="EID54164b9e-5630-418a-87b0-77919355b07c"/>
          <testSteps>
            <TestStep id="EIDba7837f1-94ac-414a-a988-f92c90fb1062">
              <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
              <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
              <parent ref="EIDd3b676eb-c9fe-4c23-828a-eb941050c7e4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcc281cf0-9c41-400f-89a7-0ec4a4a8108f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'electronicMailAddress' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDba7837f1-94ac-414a-a988-f92c90fb1062"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='electronicMailAddress' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'electronicMailAddress', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID3b13b443-ae50-45b2-b293-67e9372ef1ca">
      <label>C­I_­Citation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDa709ed48-057a-4ac5-96e5-4b4d0408c445">
          <label>ISO-Element Nr. 363: edition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EID042f6a53-3998-4679-9d99-f85cf65d1e0a">
              <label>ISO-Element Nr. 363: edition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa709ed48-057a-4ac5-96e5-4b4d0408c445"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe9ebce5e-87bf-4682-a0df-c63f607e59c2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'edition' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID042f6a53-3998-4679-9d99-f85cf65d1e0a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='edition' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID70a7c34d-8f3f-4177-8312-c0f312454592">
          <label>ISO-Element Nr. 364: edition­Date</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EIDaaa9a95b-b435-4a3d-a6a6-734f123ac41e">
              <label>ISO-Element Nr. 364: edition­Date</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID70a7c34d-8f3f-4177-8312-c0f312454592"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2f2b47a5-5b67-44cc-8462-ac7c9a9f3707">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'editionDate' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDaaa9a95b-b435-4a3d-a6a6-734f123ac41e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='editionDate' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID88040ee8-a3d6-47da-b617-c2727d7db0a7">
          <label>ISO-Element Nr. 367: cited­Responsible­Party</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EIDf3fc812c-6d9d-4607-ab97-1f1fbdc3fb2a">
              <label>ISO-Element Nr. 367: cited­Responsible­Party</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID88040ee8-a3d6-47da-b617-c2727d7db0a7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID28d2635c-91b9-41d6-b6d1-cce13fa2cdcf">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'citedResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf3fc812c-6d9d-4607-ab97-1f1fbdc3fb2a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='citedResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf85a1732-628b-424a-9338-3a26fa7744af">
          <label>ISO-Element Nr. 368: Präsentationsform</label>
          <description><![CDATA[Werteumfang eingeschränkt: nicht alle Werte gem. ISO 19115 sind hier zulässig.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EID83381f52-ff27-4e70-aa30-d105ec73ee82">
              <label>ISO-Element Nr. 368: Präsentationsform</label>
              <description><![CDATA[Werteumfang eingeschränkt: nicht alle Werte gem. ISO 19115 sind hier zulässig.]]></description>
              <parent ref="EIDf85a1732-628b-424a-9338-3a26fa7744af"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID09a365fe-7a41-495d-8aef-f0e7336b2810">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'presentationForm' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>mapHardcopy</li><li>profileHardcopy</li><li>documentDigital</li><li>modelDigital</li><li>documentHardcopy</li><li>modelHardcopy</li><li>mapDigital</li><li>profileDigital</li><li>imageHardcopy</li><li>tableDigital</li><li>imageDigital</li><li>tableHardcopy</li></ul>]]></description>
                  <parent ref="EID83381f52-ff27-4e70-aa30-d105ec73ee82"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('mapHardcopy', 'profileHardcopy', 'documentDigital', 'modelDigital', 'documentHardcopy', 'modelHardcopy', 'mapDigital', 'profileDigital', 'imageHardcopy', 'tableDigital', 'imageDigital', 'tableHardcopy')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='presentationForm' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'presentationForm', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID27fca589-9fe2-4349-80ff-d8ea70f38393">
          <label>ISO-Element aus MD_Metadata: series</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EID3743634f-e515-4fba-bda9-e3298e527575">
              <label>ISO-Element aus MD_Metadata: series</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID27fca589-9fe2-4349-80ff-d8ea70f38393"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe7570bdb-f97f-4555-921b-22fbe7565b61">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'series' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID3743634f-e515-4fba-bda9-e3298e527575"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='series' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID47e18be7-0419-49ed-a86e-29333409c2b5">
          <label>ISO-Element Nr. 371: collective­Title</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EIDf9c45d9c-2931-4808-b2df-72ea09868a63">
              <label>ISO-Element Nr. 371: collective­Title</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID47e18be7-0419-49ed-a86e-29333409c2b5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID300ba6a7-c277-4387-a14d-bd2c781c7d08">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'collectiveTitle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf9c45d9c-2931-4808-b2df-72ea09868a63"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='collectiveTitle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbb7108f8-122d-4d4a-b847-084207f19ceb">
          <label>ISO-Element Nr. 373: I­SS­N</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID3b13b443-ae50-45b2-b293-67e9372ef1ca"/>
          <testSteps>
            <TestStep id="EIDe31b6761-a992-4ceb-92c6-400f2ce891f2">
              <label>ISO-Element Nr. 373: I­SS­N</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb7108f8-122d-4d4a-b847-084207f19ceb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID260978a3-8187-4a84-9865-dcb2959a1616">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'ISSN' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDe31b6761-a992-4ceb-92c6-400f2ce891f2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='ISSN' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID00f01cd1-63ab-4192-8717-2991615efe8a">
      <label>D­Q_­Domain­Consistency</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDddd4a193-9a33-475d-979a-e00580dfdf98">
          <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID00f01cd1-63ab-4192-8717-2991615efe8a"/>
          <testSteps>
            <TestStep id="EID72efab72-732b-4f4f-8c90-b4aa394a5e34">
              <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDddd4a193-9a33-475d-979a-e00580dfdf98"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8fc8872c-b114-43f3-8070-f2fa9bc2e997">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID72efab72-732b-4f4f-8c90-b4aa394a5e34"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbf0d6e21-0ba1-4ef5-863f-0e333ea1847e">
          <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID00f01cd1-63ab-4192-8717-2991615efe8a"/>
          <testSteps>
            <TestStep id="EID5afadb30-4068-45e0-b504-1610c638a207">
              <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbf0d6e21-0ba1-4ef5-863f-0e333ea1847e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7c0ea001-ce13-440b-b9b2-b2e26fb88640">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID5afadb30-4068-45e0-b504-1610c638a207"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0c2413ad-e18d-4761-81f0-2d210c6f6cf7">
          <label>ISO-Element Nr. 105: evaluation­Procedure</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID00f01cd1-63ab-4192-8717-2991615efe8a"/>
          <testSteps>
            <TestStep id="EID7ac32439-4b89-48e7-9649-5129f684ecb6">
              <label>ISO-Element Nr. 105: evaluation­Procedure</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID0c2413ad-e18d-4761-81f0-2d210c6f6cf7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1530952c-9567-4569-ae7d-3171f17738a5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationProcedure' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID7ac32439-4b89-48e7-9649-5129f684ecb6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationProcedure' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDeea58ff9-a567-4344-84c0-e90c9c2b9063">
          <label>ISO-Element Nr. 89: date­Time</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID00f01cd1-63ab-4192-8717-2991615efe8a"/>
          <testSteps>
            <TestStep id="EID22191bf2-39ef-47ea-85b6-35ac90be163e">
              <label>ISO-Element Nr. 89: date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDeea58ff9-a567-4344-84c0-e90c9c2b9063"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfb178804-79fb-4e8d-9ac8-91018287a216">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID22191bf2-39ef-47ea-85b6-35ac90be163e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9ab7af29-774b-49c6-9455-e80c7826f5b0">
          <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
          <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
          <parent ref="EID00f01cd1-63ab-4192-8717-2991615efe8a"/>
          <testSteps>
            <TestStep id="EIDe7dce5aa-a337-409d-9808-1b0d05c1c508">
              <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
              <parent ref="EID9ab7af29-774b-49c6-9455-e80c7826f5b0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDeee478af-3263-4a04-a075-3be303b0f4b7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'result' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDe7dce5aa-a337-409d-9808-1b0d05c1c508"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDf2fafa2c-30a4-4489-b35c-d8c0646accfe">
      <label>M­D_­Usage</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID940b742d-da6f-4f5c-81b6-12a83c88d6c6">
          <label>ISO-Element Nr. 64: usage­Date­Time</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf2fafa2c-30a4-4489-b35c-d8c0646accfe"/>
          <testSteps>
            <TestStep id="EID034bb43e-e3ac-434b-b2cc-c0241225fabb">
              <label>ISO-Element Nr. 64: usage­Date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID940b742d-da6f-4f5c-81b6-12a83c88d6c6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID266bbed6-dcdf-45a5-8c3a-0df62a596986">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'usageDateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID034bb43e-e3ac-434b-b2cc-c0241225fabb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Usage' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='usageDateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Usage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID863c9b64-3bc3-4328-b19b-4d90f764be69">
          <label>ISO-Element Nr. 65: user­Determined­Limitations</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf2fafa2c-30a4-4489-b35c-d8c0646accfe"/>
          <testSteps>
            <TestStep id="EIDff290943-4b9b-4423-965d-9c2c1e294583">
              <label>ISO-Element Nr. 65: user­Determined­Limitations</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID863c9b64-3bc3-4328-b19b-4d90f764be69"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0a8a31a4-0444-4537-a36b-903c9fd84820">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'userDeterminedLimitations' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDff290943-4b9b-4423-965d-9c2c1e294583"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Usage' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='userDeterminedLimitations' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Usage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDe5849c83-dfd6-49fd-8d64-7b2804492516">
      <label>MD_LegalConstraints</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID11d4c96c-2312-43ca-a781-653ba4a6d47d">
          <testSteps>
            <TestStep id="EID0a7c03ee-32aa-48c8-814c-ccfdfc7de92b">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID11d4c96c-2312-43ca-a781-653ba4a6d47d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7b92d2c0-a126-4d4e-b887-0f2434f02b8c">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID0a7c03ee-32aa-48c8-814c-ccfdfc7de92b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9856ed00-95d7-459c-bfae-74ac1a004c4d">
          <testSteps>
            <TestStep id="EID8d6d3617-10f4-4310-aaa0-b32c002110f7">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID9856ed00-95d7-459c-bfae-74ac1a004c4d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID27ce89cd-fd2e-4e27-933a-6d66b5d738e4">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID8d6d3617-10f4-4310-aaa0-b32c002110f7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID68a5d80f-2d70-46f2-8279-6374f5839028">
          <testSteps>
            <TestStep id="EIDaf39a879-b6f9-4663-86ba-68ff1be6a3dd">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID68a5d80f-2d70-46f2-8279-6374f5839028"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf3c258ee-7a46-49b4-abb6-ef79f4fc6458">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EIDaf39a879-b6f9-4663-86ba-68ff1be6a3dd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDabd948ff-a26a-4a33-b27e-2ed442790fc4">
          <testSteps>
            <TestStep id="EID3f12bd86-5179-4646-8859-d44350da9cd0">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EIDabd948ff-a26a-4a33-b27e-2ed442790fc4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID70eb72b2-a6ce-49df-b547-76d7da83de2d">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID3f12bd86-5179-4646-8859-d44350da9cd0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID69e8635b-46c8-4dc2-a179-da3ff72b36cb">
          <testSteps>
            <TestStep id="EID8e78c5e5-aedf-4f60-904c-775ece53d67f">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID69e8635b-46c8-4dc2-a179-da3ff72b36cb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfa5eb03b-fe3c-4252-8b54-989734f106e7">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID8e78c5e5-aedf-4f60-904c-775ece53d67f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6497988b-5664-4e82-9e48-c98e1c791725">
          <testSteps>
            <TestStep id="EID5b1cf64c-998d-407d-b4f7-57039c398ee3">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID6497988b-5664-4e82-9e48-c98e1c791725"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID38e9d192-6c5d-47b7-93f2-edecadba4552">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EID5b1cf64c-998d-407d-b4f7-57039c398ee3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID59555550-5d72-485e-a1cc-f2de86d08ca7">
          <testSteps>
            <TestStep id="EIDf0b036e9-0eb6-49d7-b495-66c8cc072c97">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID59555550-5d72-485e-a1cc-f2de86d08ca7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa3e8e69c-10c9-47c3-898e-cbe81de6a693">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EIDf0b036e9-0eb6-49d7-b495-66c8cc072c97"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1721e654-670b-46bb-a2d4-9a660de8c3fd">
          <testSteps>
            <TestStep id="EID37aaba09-ddda-4884-ab8f-cf52d44f5d83">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID1721e654-670b-46bb-a2d4-9a660de8c3fd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1561ef28-4175-4eac-a857-bfb961f0f1c6">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID37aaba09-ddda-4884-ab8f-cf52d44f5d83"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3d8ef742-1967-4d52-b3ba-54662ac1050c">
          <testSteps>
            <TestStep id="EID3b68f7f0-c2c8-46bd-89a9-ac61c75cae3e">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID3d8ef742-1967-4d52-b3ba-54662ac1050c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6b4ad3ab-6ea5-4ac0-a232-b6ee990ec1e7">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EID3b68f7f0-c2c8-46bd-89a9-ac61c75cae3e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID5a232b9d-78fe-44df-a2f7-b7e3d1d49a8f">
      <label>M­D_­Coverage­Description</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID435ebc4b-3a3b-4b5e-8578-d516d51253b4">
          <label>ISO-Element Nr. 241: Inhaltstyp zu den Aufnahmeeigenschaften</label>
          <description><![CDATA[Pflichtelement bei Angaben zu den Aufnahmeeigenschaften: der Inhaltstyp muss belegt sein.]]></description>
          <parent ref="EID5a232b9d-78fe-44df-a2f7-b7e3d1d49a8f"/>
          <testSteps>
            <TestStep id="EID672a4e42-07f6-424a-adcc-128f10ec322e">
              <label>ISO-Element Nr. 241: Inhaltstyp zu den Aufnahmeeigenschaften</label>
              <description><![CDATA[Pflichtelement bei Angaben zu den Aufnahmeeigenschaften: der Inhaltstyp muss belegt sein.]]></description>
              <parent ref="EID435ebc4b-3a3b-4b5e-8578-d516d51253b4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcc8b71f5-b5a6-41bc-b089-ba2c3edcc3c5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contentType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>thematicClassification</li><li>image</li><li>physicalMeasurement</li></ul>]]></description>
                  <parent ref="EID672a4e42-07f6-424a-adcc-128f10ec322e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('thematicClassification', 'image', 'physicalMeasurement')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_CoverageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='contentType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_CoverageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'contentType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf858fbd6-4ffc-478d-9f1d-b4963a962aa0">
          <label>ISO-Element Nr. 242: dimension</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID5a232b9d-78fe-44df-a2f7-b7e3d1d49a8f"/>
          <testSteps>
            <TestStep id="EID9526225f-bb6e-4931-baaa-7908549f0999">
              <label>ISO-Element Nr. 242: dimension</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf858fbd6-4ffc-478d-9f1d-b4963a962aa0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5d293fe7-7771-4d39-8959-919336cb352b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dimension' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9526225f-bb6e-4931-baaa-7908549f0999"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_CoverageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dimension' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_CoverageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f">
      <label>M­D_­Medium</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID29167e56-07ba-4fdf-ae4a-85eccd185a53">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID345e922c-591c-4be8-beb4-0c5365381a24">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EID29167e56-07ba-4fdf-ae4a-85eccd185a53"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbd440ab4-07d7-4719-a662-a0c623a262b4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dvdRom</li><li>dvd</li><li>cdRom</li><li>onLine</li></ul>]]></description>
                  <parent ref="EID345e922c-591c-4be8-beb4-0c5365381a24"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dvdRom', 'dvd', 'cdRom', 'onLine')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'name', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID15138dfd-2f33-4bb6-b415-d4778b58edad">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EIDd3beadcc-1cf8-4e2f-96b3-8b069908d55e">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EID15138dfd-2f33-4bb6-b415-d4778b58edad"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID101000f5-ed3f-4834-816a-99f0b2ee7cdf">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDd3beadcc-1cf8-4e2f-96b3-8b069908d55e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc51d1c5b-da85-4376-b17e-1d1fc2ef8d99">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID3d2d7d66-5e69-41e5-9516-99b2a62e87e5">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EIDc51d1c5b-da85-4376-b17e-1d1fc2ef8d99"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDef8cc7af-c047-42f1-9bd0-7a46112c1340">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID3d2d7d66-5e69-41e5-9516-99b2a62e87e5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'name', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcd66b04e-dc41-4a50-aba9-6621c37bd2c7">
          <label>ISO-Element Nr. 293: density</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID1fead8f6-0dcd-4d75-9c51-947ef9c1c430">
              <label>ISO-Element Nr. 293: density</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDcd66b04e-dc41-4a50-aba9-6621c37bd2c7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDea188e68-1eea-47b5-8cea-331845d32077">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'density' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1fead8f6-0dcd-4d75-9c51-947ef9c1c430"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='density' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9004e986-222b-41d7-85fa-9c764663727c">
          <label>ISO-Element Nr. 294: densityUnits</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID6fc2e3b8-3f02-45a8-b71b-0536e633dc11">
              <label>ISO-Element Nr. 294: densityUnits</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID9004e986-222b-41d7-85fa-9c764663727c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID60bd70f0-f54d-4493-b3a4-d2235c6c8873">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'densityUnits' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID6fc2e3b8-3f02-45a8-b71b-0536e633dc11"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='densityUnits' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID194247c7-d4d7-40db-8258-4bdffedf9e0c">
          <label>ISO-Element Nr. 295: volumes</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID02b3b6d6-7ea3-4e16-b885-1d69673dab37">
              <label>ISO-Element Nr. 295: volumes</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID194247c7-d4d7-40db-8258-4bdffedf9e0c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID73eb91a3-bd30-4eed-bf7b-53f254c711ce">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'volumes' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID02b3b6d6-7ea3-4e16-b885-1d69673dab37"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='volumes' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID29c9a641-0123-41ce-a1e8-f23ded5749ae">
          <label>ISO-Element Nr. 296: medium­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID306ee397-a0b8-4084-84eb-51c4a927f337">
              <label>ISO-Element Nr. 296: medium­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID29c9a641-0123-41ce-a1e8-f23ded5749ae"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb333d88b-13b8-4d19-a724-d604961ab44b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'mediumFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>iso9660RockRidge</li><li>cpio</li><li>iso9660AppleHFS</li><li>iso9660</li><li>tar</li><li>highSierra</li></ul>]]></description>
                  <parent ref="EID306ee397-a0b8-4084-84eb-51c4a927f337"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('iso9660RockRidge', 'cpio', 'iso9660AppleHFS', 'iso9660', 'tar', 'highSierra')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='mediumFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'mediumFormat', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDedf48b85-fd91-431d-887c-e77188783816">
          <label>ISO-Element Nr. 296: medium­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDdc0eb6cd-6fb9-48d2-8b97-87aaa4f86f5f"/>
          <testSteps>
            <TestStep id="EID886c20a1-221c-4a12-ae7a-31894d460949">
              <label>ISO-Element Nr. 296: medium­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDedf48b85-fd91-431d-887c-e77188783816"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf8643137-de76-4a71-9baa-b18b40209378">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'mediumFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID886c20a1-221c-4a12-ae7a-31894d460949"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='mediumFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID78ab2859-826e-4c0b-9c33-ab4e1f30c40a">
      <label>R­S_­Identifier</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID1113f674-b1c7-4073-b503-19403235fe4b">
          <label>ISO-Element Nr. 206: authority</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID78ab2859-826e-4c0b-9c33-ab4e1f30c40a"/>
          <testSteps>
            <TestStep id="EID81ed0c9a-4e95-4753-8eea-54551764bfb0">
              <label>ISO-Element Nr. 206: authority</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1113f674-b1c7-4073-b503-19403235fe4b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID39ab7f49-b6a5-48db-a540-138c0ea346ec">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'authority' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID81ed0c9a-4e95-4753-8eea-54551764bfb0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='authority' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'RS_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID47e8729b-1670-4dcc-bb7b-b1f448ddb2e6">
      <label>M­D_­Scope­Description</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID15cbce0b-91fb-4696-92a8-8c932c89ac18">
          <label>ISO-Element Nr. 149: Beschreibung der Bezugsebene</label>
          <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EID47e8729b-1670-4dcc-bb7b-b1f448ddb2e6"/>
          <testSteps>
            <TestStep id="EID408944c0-3f32-47ef-a9d6-adb4e6953536">
              <label>ISO-Element Nr. 149: Beschreibung der Bezugsebene</label>
              <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EID15cbce0b-91fb-4696-92a8-8c932c89ac18"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7ba6c340-bc95-48ac-9ee5-6248e0ac7725">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_ScopeDescription' and namespace 'http://www.isotc211.org/2005/gmd' must contain one and only one of the following options: <br><ul><li>attributes</li><li>features</li><li>dataset</li><li>other</li></ul>]]></description>
                  <parent ref="EID408944c0-3f32-47ef-a9d6-adb4e6953536"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $countElements := count($typeFound/*)
       let $countChoice0 := count($typeFound/*[local-name()='attributes' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice1 := count($typeFound/*[local-name()='features' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice2 := count($typeFound/*[local-name()='dataset' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice3 := count($typeFound/*[local-name()='other' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if ($countElements gt 1) then
         local:addMessage('TR.moreThanOneOptionError', map { 'localName': 'MD_ScopeDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else if (($countChoice0 + $countChoice1 + $countChoice2 + $countChoice3) lt 1) then 
         local:addMessage('TR.noValidOptionError', map { 'localName': 'MD_ScopeDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID2db76464-a3a2-4664-b643-3f87b1121d6a">
      <label>S­V_­Operation­Metadata</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDe60199f8-7705-4344-b638-39a12d257b9c">
          <label>ISO-Element C.2.2: Protokoll aus DCPList</label>
          <description><![CDATA[Pflichtelement: die Angabe des Protokolls aus DCPList muss vorhanden sein.]]></description>
          <parent ref="EID2db76464-a3a2-4664-b643-3f87b1121d6a"/>
          <testSteps>
            <TestStep id="EID014f623d-d5df-4c12-a4a9-cb6fd1d72e55">
              <label>ISO-Element C.2.2: Protokoll aus DCPList</label>
              <description><![CDATA[Pflichtelement: die Angabe des Protokolls aus DCPList muss vorhanden sein.]]></description>
              <parent ref="EIDe60199f8-7705-4344-b638-39a12d257b9c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa95612a1-2b21-47dd-b0c3-5705705ddff5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'DCP' and namespace 'http://www.isotc211.org/2005/srv' should have a value that corresponds to one from the following list: <br><ul><li>CORBA</li><li>COM</li><li>JAVA</li><li>WebServices</li><li>XML</li><li>SQL</li></ul>]]></description>
                  <parent ref="EID014f623d-d5df-4c12-a4a9-cb6fd1d72e55"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('CORBA', 'COM', 'JAVA', 'WebServices', 'XML', 'SQL')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_OperationMetadata' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='DCP' and namespace-uri()='http://www.isotc211.org/2005/srv']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'SV_OperationMetadata', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'DCP', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0e45bb8c-a884-4ca3-9880-34c1b0d13b93">
          <label>ISO-Element aus C.2: operation­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2db76464-a3a2-4664-b643-3f87b1121d6a"/>
          <testSteps>
            <TestStep id="EID3573f1b2-26a3-4c9a-8c2e-e574d06ea863">
              <label>ISO-Element aus C.2: operation­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID0e45bb8c-a884-4ca3-9880-34c1b0d13b93"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe86d8939-504c-4408-aaed-f2e5ad6251ff">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'operationDescription' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID3573f1b2-26a3-4c9a-8c2e-e574d06ea863"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_OperationMetadata' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='operationDescription' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_OperationMetadata', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd5301844-5321-4385-b653-8ec88115e92f">
          <label>ISO-Element aus C.2: invocation­Name</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2db76464-a3a2-4664-b643-3f87b1121d6a"/>
          <testSteps>
            <TestStep id="EID9976b638-82d7-4d4f-b595-04c8c1443c15">
              <label>ISO-Element aus C.2: invocation­Name</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDd5301844-5321-4385-b653-8ec88115e92f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7fb8daaa-e1d6-4b90-a05b-7fdf3ff70884">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'invocationName' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9976b638-82d7-4d4f-b595-04c8c1443c15"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_OperationMetadata' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='invocationName' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_OperationMetadata', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0b573540-c27d-4d76-9aac-013744a0aa27">
          <label>ISO-Element aus C.2: parameters</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2db76464-a3a2-4664-b643-3f87b1121d6a"/>
          <testSteps>
            <TestStep id="EIDaf746abf-b8bf-425e-8660-3f27097a33d0">
              <label>ISO-Element aus C.2: parameters</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID0b573540-c27d-4d76-9aac-013744a0aa27"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDeb80423a-f93e-4697-9983-cf07a40a5e11">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'parameters' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDaf746abf-b8bf-425e-8660-3f27097a33d0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_OperationMetadata' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='parameters' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_OperationMetadata', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4d072e63-7606-4f8b-b299-267a5b702cfe">
          <label>ISO-Element aus C.2: depends­On</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2db76464-a3a2-4664-b643-3f87b1121d6a"/>
          <testSteps>
            <TestStep id="EIDce129788-08c9-41cc-931a-4222c1df4488">
              <label>ISO-Element aus C.2: depends­On</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4d072e63-7606-4f8b-b299-267a5b702cfe"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa44a7a72-f36c-466a-9df6-b0a7309ea598">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dependsOn' and namespace 'http://www.isotc211.org/2005/srv' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDce129788-08c9-41cc-931a-4222c1df4488"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_OperationMetadata' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dependsOn' and namespace-uri()='http://www.isotc211.org/2005/srv']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_OperationMetadata', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e">
      <label>M­D_­Metadata</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EID51c64d96-e012-4c81-96a8-9762fd5ac2f5">
          <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
          <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID4ec15235-8826-4a9c-83b8-e3aed722b5a5">
              <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
              <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
              <parent ref="EID51c64d96-e012-4c81-96a8-9762fd5ac2f5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0f26937d-0c28-4121-b0f5-4643ec2daca5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'fileIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID4ec15235-8826-4a9c-83b8-e3aed722b5a5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID39e85fbe-feba-423a-82a7-599c2237259d">
          <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
          <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID91a926ac-4ded-4b81-8119-7df3f439bfa7">
              <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
              <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
              <parent ref="EID39e85fbe-feba-423a-82a7-599c2237259d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID84755129-6042-44a4-9243-48b560eccb7f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'fileIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID91a926ac-4ded-4b81-8119-7df3f439bfa7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'fileIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1410030d-b2c6-4448-b8d1-7e4e07f8e026">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDdfb56b7b-8e73-4e3c-b6c6-b1c65d500abd">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID1410030d-b2c6-4448-b8d1-7e4e07f8e026"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc1dcb6b6-a8c9-4562-bfd0-4a2e291e6267">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDdfb56b7b-8e73-4e3c-b6c6-b1c65d500abd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2cca7e17-de7c-41cd-a493-df287d6c77b2">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID4731059d-0e80-498a-93b2-41feffc752ea">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID2cca7e17-de7c-41cd-a493-df287d6c77b2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDee091d57-5182-4198-8adb-4bb8b4e908a6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID4731059d-0e80-498a-93b2-41feffc752ea"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'language', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1a4bb411-168d-43fa-a7e2-3fed546a0b93">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID4ca4575b-2fd8-42f4-9ae8-69c94e8e27f5">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EID1a4bb411-168d-43fa-a7e2-3fed546a0b93"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID020cd24f-d2b4-4ff6-bff3-dabfeaed2c91">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>8859part1</li><li>utf8</li></ul>]]></description>
                  <parent ref="EID4ca4575b-2fd8-42f4-9ae8-69c94e8e27f5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('8859part1', 'utf8')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'characterSet', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc17174cf-85f2-4482-8ae7-ccb3cc21186c">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID111cda4d-6729-4ef6-8023-6010a8e614a3">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EIDc17174cf-85f2-4482-8ae7-ccb3cc21186c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID286825d4-e293-4bb8-8d97-730f258579c7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID111cda4d-6729-4ef6-8023-6010a8e614a3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID88056312-470e-4257-bd15-626a1b359da1">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID00d73dad-9753-4ded-aec1-6111fcec6111">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EID88056312-470e-4257-bd15-626a1b359da1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID22982fa5-0d74-4b55-8b49-37127fba2922">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID00d73dad-9753-4ded-aec1-6111fcec6111"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'characterSet', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID98b15bf8-b419-4aee-9cda-f330978366ab">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDdbf0445b-8f1b-4a78-a6e6-aefe2e6ba218">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EID98b15bf8-b419-4aee-9cda-f330978366ab"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID84b45776-479c-4496-aaea-4e3c0a38ab37">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>tile</li><li>featureType</li><li>service</li><li>application</li></ul>]]></description>
                  <parent ref="EIDdbf0445b-8f1b-4a78-a6e6-aefe2e6ba218"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'tile', 'featureType', 'service', 'application')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'hierarchyLevel', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8e17bfa8-92e8-4a5a-86be-a3450217b4e9">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDe5b29a5d-ecb8-4d9d-9e2a-ccfd6a8c009c">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EID8e17bfa8-92e8-4a5a-86be-a3450217b4e9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb8c4cdf9-be11-420b-8794-4938f0283c65">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDe5b29a5d-ecb8-4d9d-9e2a-ccfd6a8c009c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe8fe8024-66a8-42f5-877b-bb1e03b0a59e">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID92f1bbad-3eb4-4123-95cd-9321dad4fdd1">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EIDe8fe8024-66a8-42f5-877b-bb1e03b0a59e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDeb9c8591-240b-4f7f-9e26-69bf92196ebc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID92f1bbad-3eb4-4123-95cd-9321dad4fdd1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'hierarchyLevel', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5a403e06-493f-42bd-866d-74227339dbe7">
          <label>ISO-Element Nr. 11.1: data­Set­UR­I</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID5ff27acc-ff2d-4ec1-bae4-03ebf0609bd1">
              <label>ISO-Element Nr. 11.1: data­Set­UR­I</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID5a403e06-493f-42bd-866d-74227339dbe7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7be87c94-5049-4693-94ce-387b95733cdc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dataSetURI' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID5ff27acc-ff2d-4ec1-bae4-03ebf0609bd1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dataSetURI' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc182624a-e987-4b41-8858-e69cc30618d5">
          <label>ISO-Element Nr. 11.2: locale</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID06161b3f-d40c-4abd-abb4-31d7647abff9">
              <label>ISO-Element Nr. 11.2: locale</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDc182624a-e987-4b41-8858-e69cc30618d5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID776616a7-5a9c-40ca-a8fe-7569a10253fe">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'locale' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID06161b3f-d40c-4abd-abb4-31d7647abff9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='locale' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID162bc04a-7130-4001-a7d8-b7e0536debd2">
          <label>ISO-Element Nr. 12: spatial­Representation­Info</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID50c2c4a7-a7ff-45be-9bb5-14c1fc084f87">
              <label>ISO-Element Nr. 12: spatial­Representation­Info</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID162bc04a-7130-4001-a7d8-b7e0536debd2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID808a9dc8-ff01-47ef-9413-a8abba07c1ea">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID50c2c4a7-a7ff-45be-9bb5-14c1fc084f87"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='spatialRepresentationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID21426872-d9fa-4cb0-8fb6-78b1a1aca5f7">
          <label>ISO-Element Nr. 13: Bezugssystem</label>
          <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID9075000e-2a7b-45bf-9720-284de8d490ce">
              <label>ISO-Element Nr. 13: Bezugssystem</label>
              <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
              <parent ref="EID21426872-d9fa-4cb0-8fb6-78b1a1aca5f7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9267f85c-c775-4bba-af66-d196edd0fbb5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID9075000e-2a7b-45bf-9720-284de8d490ce"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID19a4883c-c89e-4a67-93af-b95c2ce3bf8f">
          <label>ISO-Element Nr. 13: Bezugssystem</label>
          <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDb5548dbc-70fe-4d60-b85b-caeb71048482">
              <label>ISO-Element Nr. 13: Bezugssystem</label>
              <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
              <parent ref="EID19a4883c-c89e-4a67-93af-b95c2ce3bf8f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9eea2382-b299-4a7d-babe-4ba9fdb859f5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemInfo' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDb5548dbc-70fe-4d60-b85b-caeb71048482"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'referenceSystemInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDba1243dd-1827-48b4-a0d9-01353da31f8a">
          <label>ISO-Element Nr. 15: Angaben zu den Daten/zum Dienst/zur Anwendung</label>
          <description><![CDATA[Pflichtelement: die Angaben zu den Daten/zum Dienst/zur Anwendung müssen belegt sein.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID9e07f9e6-ba16-40fd-aae5-90c1e18ac88a">
              <label>ISO-Element Nr. 15: Angaben zu den Daten/zum Dienst/zur Anwendung</label>
              <description><![CDATA[Pflichtelement: die Angaben zu den Daten/zum Dienst/zur Anwendung müssen belegt sein.]]></description>
              <parent ref="EIDba1243dd-1827-48b4-a0d9-01353da31f8a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDccae45bd-4917-49c6-a023-470cc2c3049a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'identificationInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID9e07f9e6-ba16-40fd-aae5-90c1e18ac88a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID05753d02-5d05-4dfc-b035-e386eb148612">
          <label>ISO-Element Nr. 20: metadata­Constraints</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID443b7c2f-df49-48c6-9329-88cd5f162286">
              <label>ISO-Element Nr. 20: metadata­Constraints</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID05753d02-5d05-4dfc-b035-e386eb148612"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID828b88d6-a1a2-469e-9a68-6deb169112f3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'metadataConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID443b7c2f-df49-48c6-9329-88cd5f162286"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='metadataConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID240877db-4b1b-4f80-a978-d6c6cb1dcdfa">
          <label>ISO-Element Nr. 22: metadata­Maintenance</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDe848a9d9-fec1-4a35-afc2-b660197355a5">
              <label>ISO-Element Nr. 22: metadata­Maintenance</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID240877db-4b1b-4f80-a978-d6c6cb1dcdfa"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8820ed92-8d52-49da-bbeb-bf97a9fe332b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'metadataMaintenance' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDe848a9d9-fec1-4a35-afc2-b660197355a5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='metadataMaintenance' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa9e3df90-7429-4610-b5d7-42a74feb3899">
          <label>ISO-Element aus MD_Metadata: series</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID85d08768-ff7b-48b4-93bf-f3b949a13ed1">
              <label>ISO-Element aus MD_Metadata: series</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa9e3df90-7429-4610-b5d7-42a74feb3899"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8fbed409-ac59-45ff-b363-28d4f22d1ff9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'series' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID85d08768-ff7b-48b4-93bf-f3b949a13ed1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='series' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4ae59a24-c9e9-4fea-b178-824ef063308e">
          <label>ISO-Element aus MD_Metadata: describes</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDfa1a6a2f-0eef-434f-9ef0-6696080ade9d">
              <label>ISO-Element aus MD_Metadata: describes</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4ae59a24-c9e9-4fea-b178-824ef063308e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID09db3d32-a092-4d31-ac67-f7bab298809f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'describes' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDfa1a6a2f-0eef-434f-9ef0-6696080ade9d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='describes' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3d16d4e3-2720-4ff0-9305-ca072c4cefeb">
          <label>ISO-Element aus MD_Metadata: property­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID41d9622a-8f09-4fc3-87d2-e25a19c20641">
              <label>ISO-Element aus MD_Metadata: property­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3d16d4e3-2720-4ff0-9305-ca072c4cefeb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2082ba15-2890-4960-8c1a-c19ecfdf9cfb">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'propertyType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID41d9622a-8f09-4fc3-87d2-e25a19c20641"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='propertyType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID543cb7b5-2831-46ec-83c3-d5ac00c32331">
          <label>ISO-Element aus MD_Metadata: feature­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EIDabfeb91c-40e8-4e5e-8da5-7a71d68ef2cc">
              <label>ISO-Element aus MD_Metadata: feature­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID543cb7b5-2831-46ec-83c3-d5ac00c32331"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd4853004-c7f3-4d3d-bb09-5bfb8fe7ca96">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'featureType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDabfeb91c-40e8-4e5e-8da5-7a71d68ef2cc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='featureType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe6b42705-0f42-4882-805d-b4dc5cf96db1">
          <label>ISO-Element aus MD_Metadata: feature­Attribute</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb60bff5b-614e-4ff3-a23a-875c4697a84e"/>
          <testSteps>
            <TestStep id="EID1dc2ec5d-16f5-4436-8fce-6b3fe5ad8866">
              <label>ISO-Element aus MD_Metadata: feature­Attribute</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDe6b42705-0f42-4882-805d-b4dc5cf96db1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1529a36b-e380-44a4-bd3c-9bbabc347e8a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'featureAttribute' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1dc2ec5d-16f5-4436-8fce-6b3fe5ad8866"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='featureAttribute' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDf89e7b1b-3101-4b44-920e-e20bf36c7133">
      <label>CI_ResponsibleParty</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDa5827406-be2c-4a42-a998-5944bc7af47b">
          <testSteps>
            <TestStep id="EIDd6be8abf-5096-469c-acac-4adc0c13299b">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EIDa5827406-be2c-4a42-a998-5944bc7af47b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf3ae0a00-32ca-4198-9357-1e0ad8a5daf7">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDd6be8abf-5096-469c-acac-4adc0c13299b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID05c68b90-52dd-4f0d-a0c2-1194bcfdedae">
          <testSteps>
            <TestStep id="EIDa3a830ea-9e2f-41fb-9865-ddcc13ec0ae7">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID05c68b90-52dd-4f0d-a0c2-1194bcfdedae"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0ad1055a-8781-4ed9-b6b7-1a9db8ca41f4">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDa3a830ea-9e2f-41fb-9865-ddcc13ec0ae7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4fb891bb-31e0-44b0-8609-de6e496db549">
          <testSteps>
            <TestStep id="EID5d5e5804-cced-480b-9992-79705301ed66">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID4fb891bb-31e0-44b0-8609-de6e496db549"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDce54cda2-5a51-4da8-a1ab-08368d0ebadb">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID5d5e5804-cced-480b-9992-79705301ed66"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5d65b381-a073-4ccd-8007-f63d21aed062">
          <testSteps>
            <TestStep id="EID959f7539-d92e-46a3-bd33-a34f34326681">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID5d65b381-a073-4ccd-8007-f63d21aed062"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID80c3354b-ef4c-461d-954c-790ffb1c93bb">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID959f7539-d92e-46a3-bd33-a34f34326681"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9188217c-a6c4-4a6a-81f0-e54fb7f7371d">
          <testSteps>
            <TestStep id="EIDb21a52c0-6dbd-45e4-b814-6f34da24bc79">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EID9188217c-a6c4-4a6a-81f0-e54fb7f7371d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID92f1f8ce-3c36-4677-a533-df390bda95ae">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDb21a52c0-6dbd-45e4-b814-6f34da24bc79"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa89dc327-8357-4295-8bd7-3976e50fb38d">
          <testSteps>
            <TestStep id="EID016e5067-5244-486c-8491-61b8d73d9f8d">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDa89dc327-8357-4295-8bd7-3976e50fb38d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDae7064ff-4262-4c80-80a7-5f5190f7f140">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID016e5067-5244-486c-8491-61b8d73d9f8d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID88e47dee-825a-4048-ae3c-878f5985af6f">
          <testSteps>
            <TestStep id="EIDf5d6c3f6-094a-4240-93ce-081824c20451">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID88e47dee-825a-4048-ae3c-878f5985af6f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID99654a31-35ad-42d0-ad49-4bd9d2574594">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDf5d6c3f6-094a-4240-93ce-081824c20451"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe3bc3245-78a5-4921-913f-b4d8fbba4e52">
          <testSteps>
            <TestStep id="EIDc4f815fe-2065-4cd2-96be-cc5139c18aee">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDe3bc3245-78a5-4921-913f-b4d8fbba4e52"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe445bd0f-0d0f-4420-baa5-2c516e727282">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDc4f815fe-2065-4cd2-96be-cc5139c18aee"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbe01af80-3b66-49cb-80da-27e98671db69">
          <testSteps>
            <TestStep id="EIDd4f62050-522a-48b3-990e-f4e53a06bc4f">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EIDbe01af80-3b66-49cb-80da-27e98671db69"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6c7d5821-34d9-4a2b-b1a1-82a3192c0186">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDd4f62050-522a-48b3-990e-f4e53a06bc4f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1f66ca62-ce9d-4832-817c-535dbf95d379">
          <testSteps>
            <TestStep id="EIDa48ac5af-5210-4070-9dd5-0744a1820e3f">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID1f66ca62-ce9d-4832-817c-535dbf95d379"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2d91e833-2eb5-40a4-beb5-ccef23dae9d6">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDa48ac5af-5210-4070-9dd5-0744a1820e3f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8491cdc4-f881-440b-b3c7-0b32c637c900">
          <testSteps>
            <TestStep id="EIDf245437d-3e47-4736-9961-925cdd250ba5">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID8491cdc4-f881-440b-b3c7-0b32c637c900"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID98067c0b-1e52-42f0-b32f-9f427d330f27">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDf245437d-3e47-4736-9961-925cdd250ba5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe3e9b9c9-1e0d-4be4-ac5a-403301a13416">
          <testSteps>
            <TestStep id="EID0efe8eb4-9f4a-47cb-9bf6-62c22a26094e">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDe3e9b9c9-1e0d-4be4-ac5a-403301a13416"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1e2b0fdd-5dbf-4a33-afe1-103aa0c4e62f">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID0efe8eb4-9f4a-47cb-9bf6-62c22a26094e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4898ac6d-3c06-49c2-bfb7-6e8634d0d1f6">
          <testSteps>
            <TestStep id="EID403b39d3-1880-4b81-b225-694fa3aed5a5">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EID4898ac6d-3c06-49c2-bfb7-6e8634d0d1f6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2a61bd6f-e5c0-4f02-8436-29df9d96be38">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EID403b39d3-1880-4b81-b225-694fa3aed5a5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc6eeafe9-c718-4fb9-832f-13a510373be1">
          <testSteps>
            <TestStep id="EID27543b60-40a0-49f7-b7de-3ce81ccd7883">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDc6eeafe9-c718-4fb9-832f-13a510373be1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf448428c-3898-4e8d-8d38-634b2e60847c">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID27543b60-40a0-49f7-b7de-3ce81ccd7883"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd658e2c6-561d-46b7-a636-1b65ee3a8279">
          <testSteps>
            <TestStep id="EID6cc480cc-4f4a-4cae-a153-207020482ad6">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDd658e2c6-561d-46b7-a636-1b65ee3a8279"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf93780f6-7cb9-43f6-9203-1030da5e07f9">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für den Dienst</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID6cc480cc-4f4a-4cae-a153-207020482ad6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDde735453-f61e-4024-91b4-7ca0d93584e3">
          <testSteps>
            <TestStep id="EID1b7a28a7-ab38-40c8-a9b8-f8e0c4c82e1e">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDde735453-f61e-4024-91b4-7ca0d93584e3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID111ba83f-930f-460c-bcb1-ae9dbac9f5ad">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID1b7a28a7-ab38-40c8-a9b8-f8e0c4c82e1e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID324998ba-c6b5-4fd1-abcc-4da3874504dc">
      <label>Default test module</label>
      <description><![CDATA[This is the default test module]]></description>
      <parent ref="EIDeab974cd-9e33-46cf-bb25-3571246233d9"/>
      <testCases>
        <TestCase id="EIDbb55df82-71dc-48b6-91c9-7158408672f4">
          <label>Einschränkungen bei Objektarten</label>
          <description><![CDATA[Einschränkungen bei Objektarten]]></description>
          <parent ref="EID324998ba-c6b5-4fd1-abcc-4da3874504dc"/>
          <testSteps>
            <TestStep id="EIDfe789336-04ad-44ff-a4d6-79cf5aa8ea0d">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Contact' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcea77098-bdbd-49de-9bf5-42bd1bb0bff3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Contact' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDfe789336-04ad-44ff-a4d6-79cf5aa8ea0d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID55eb73e8-09cd-45a8-ad07-5f1f13556fec">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_Metadata' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb94be152-e705-418b-9418-45bf6391abc5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_Metadata' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID55eb73e8-09cd-45a8-ad07-5f1f13556fec"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID8d44d0b4-3953-4e26-b2a8-7423f6853e3c">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_ResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe6bd6a7c-6ac5-4f78-bd76-e470cd814c53">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_ResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID8d44d0b4-3953-4e26-b2a8-7423f6853e3c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDaab40537-94b1-4e97-b74d-cb8fbd56d095">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'RS_Identifier' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID32fc95d9-c77e-4888-8fc1-5e1f37ea230c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'RS_Identifier' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDaab40537-94b1-4e97-b74d-cb8fbd56d095"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'RS_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID3476749c-728b-4673-b064-774be536b457">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_Keywords' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID92936034-0123-46eb-bfa9-b0cf8729c30b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_Keywords' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID3476749c-728b-4673-b064-774be536b457"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_Keywords' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_Keywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID4566f372-cdf6-44a7-b462-4dfd0cae3bb1">
              <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6dfdd46f-f5c7-4bff-b375-8ce5a60d81f4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID4566f372-cdf6-44a7-b462-4dfd0cae3bb1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID0774d4e4-217a-4971-b6fd-407bfbe25546">
              <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID51448c40-319f-450a-acb8-e8b6d5957768">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID0774d4e4-217a-4971-b6fd-407bfbe25546"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDb90f3086-9641-4137-b3d2-0d2db73c56f2">
              <label>ISO-Element Nr. 105: evaluation­Procedure</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID30b5a978-3da6-4134-9c32-af3ac665aa11">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationProcedure' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDb90f3086-9641-4137-b3d2-0d2db73c56f2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationProcedure' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDfce3bc55-a1ed-4c62-a23f-0da8ad5a4684">
              <label>ISO-Element Nr. 89: date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID35afbdee-dcda-4a8b-bb77-a6ecb46eb3db">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDfce3bc55-a1ed-4c62-a23f-0da8ad5a4684"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDe161fc75-672f-47fd-99d2-bb82bcdfbb0e">
              <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4c516a62-40cf-4fee-8a5d-87c51b046b35">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'result' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDe161fc75-672f-47fd-99d2-bb82bcdfbb0e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID49e589f2-e792-498b-889d-69f25305da8c">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Address' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID93f1ae5b-be65-4fac-a42e-7ce6225c6075">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Address' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID49e589f2-e792-498b-889d-69f25305da8c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID8dafc288-77c9-4a45-aa0e-fd373f16cb49">
              <label>ISO-Element Nr. 27: credit</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDddec2d0d-ef81-474b-9080-55fef93354e2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'credit' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8dafc288-77c9-4a45-aa0e-fd373f16cb49"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='credit' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDb4a1c3d7-0c5b-4af8-a298-6fa9c9556f3d">
              <label>ISO-Element Nr. 28: status</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'AbstractMD_Identification' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf55cd741-158b-42bb-8176-abc6b5fac351">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'status' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDb4a1c3d7-0c5b-4af8-a298-6fa9c9556f3d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='status' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID86574be2-b1c0-4482-a4dd-387b08a6f82b">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2aeb7500-4834-49cd-8bfb-a670116d57bc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID86574be2-b1c0-4482-a4dd-387b08a6f82b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID02833dbf-0dd9-4e0f-876e-0175bb480c1a">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Dienst</label>
              <description><![CDATA[Pflichtelement: eine für den Dienst verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8c5cd005-56dd-4ec6-a6f3-ed682c7a4731">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID02833dbf-0dd9-4e0f-876e-0175bb480c1a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'pointOfContact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID75e70557-8961-455d-bb79-67182d7b38cf">
              <label>ISO-Element Nr. 32: resource­Format</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDde18638d-1ff9-4f3d-afae-570e8f704e03">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID75e70557-8961-455d-bb79-67182d7b38cf"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID39ad5acc-73ff-425b-bbcb-cbc96dfde451">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdc9766b6-ea45-497e-9ea5-472138c7562c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID39ad5acc-73ff-425b-bbcb-cbc96dfde451"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDf1e6b0a9-c52c-49ae-87b8-7405ae3eda1c">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbb2764c3-afdc-44f0-a68e-2eb63992a4d5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDf1e6b0a9-c52c-49ae-87b8-7405ae3eda1c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'descriptiveKeywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID33b216bd-251d-4373-a231-421649d03d65">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID926f2864-19a8-4845-923e-e1352d8031e6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID33b216bd-251d-4373-a231-421649d03d65"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDed79bc3a-a97e-4323-b22d-072c370571a6">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDefa742b7-8624-4320-b254-b524b9ccbaa0">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDed79bc3a-a97e-4323-b22d-072c370571a6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'resourceConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID9dc192f1-f9c3-48b7-8f1c-d4e0b4d38e8c">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Date' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID555ad994-836c-49f6-a1a5-e3a0ccb090e4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Date' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID9dc192f1-f9c3-48b7-8f1c-d4e0b4d38e8c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Date' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Date', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDb57d5002-1eae-40c2-9022-e78f7108d94d">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_LegalConstraints' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf6a1c5fa-e943-40f5-a332-57167cf688bd">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_LegalConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDb57d5002-1eae-40c2-9022-e78f7108d94d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_LegalConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID0851479c-2154-497e-ab32-c0deab867cfa">
              <label>ISO-Element Nr. 146: update­Scope</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_MaintenanceInformation' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDccd3eff9-cc5e-4196-8c4d-9f343dcd5261">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'updateScope' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>featureType</li><li>service</li><li>tile</li><li>application</li></ul>]]></description>
                  <parent ref="EID0851479c-2154-497e-ab32-c0deab867cfa"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'featureType', 'service', 'tile', 'application')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='updateScope' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'updateScope', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID0e3fc558-8018-4efa-8a12-109c07d5b247">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_ReferenceSystem' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9e8dc050-8585-4178-8f19-01683c3f419e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_ReferenceSystem' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID0e3fc558-8018-4efa-8a12-109c07d5b247"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_ReferenceSystem', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID0e246cdc-97e8-4b5b-a40c-d034ea9a230b">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9d95d78a-c755-44b6-b2f6-1e9476040735">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID0e246cdc-97e8-4b5b-a40c-d034ea9a230b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractEX_GeographicExtent' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractEX_GeographicExtent', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDf81b8813-6421-4503-966f-dc5b4d11b26d">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation der BoundingBox</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels BoundingBox: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe187a771-66ab-40de-8949-966fe7072cee">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDf81b8813-6421-4503-966f-dc5b4d11b26d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractEX_GeographicExtent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDc04d7086-2209-4805-bf19-7b3c497ff815">
              <label>ISO-Element Nr. 28: status</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_DataIdentification' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7c6b5cbe-5922-439d-bfe0-d782b7bd20cb">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'status' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDc04d7086-2209-4805-bf19-7b3c497ff815"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='status' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDc7a67ff2-f284-4f63-bec0-d421c9b0765b">
              <label>ISO-Element Nr. 28: status</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'SV_ServiceIdentification' and namespace 'http://www.isotc211.org/2005/srv']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2129e3cb-0679-465f-abdd-0645c07335ec">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'status' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDc7a67ff2-f284-4f63-bec0-d421c9b0765b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='status' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDfbfa939e-bee7-4d62-b8af-2536a114c7f2">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Citation' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EIDbb55df82-71dc-48b6-91c9-7158408672f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0f67271d-167e-461b-a86d-89c490d6421d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Citation' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDfbfa939e-bee7-4d62-b8af-2536a114c7f2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</ExecutableTestSuite>
