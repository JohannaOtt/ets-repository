<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID203b86a3-2f89-44b6-9236-a8ec12212265" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>http://github.com/inspire-eu-validation/ets-repository/metadata/iso</remoteResource>
  <localPath>/auto</localPath>
  <label>csw again</label>
  <description><![CDATA[This test was generated automatically from a Schema profile in haleconnect]]></description>
  <reference>../../inspire-md-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>admin admin</author>
  <creationDate>2018-11-14T13:20:31.933Z</creationDate>
  <lastEditor>admin admin</lastEditor>
  <lastUpdateDate>2018-11-14T13:20:31.933Z</lastUpdateDate>
  <tags>
    <tag ref="EIDfe1f3796-0ebf-4960-a6f7-f935e087fa4c"/>
  </tags>
  <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
  <translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes>
    <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
  </supportedTestObjectTypes>
  <testModules>
    <TestModule id="EIDb72fe916-9884-4d27-a725-a8008b2beb0a">
      <label>Default test module</label>
      <description><![CDATA[This is the default test module]]></description>
      <parent ref="EID203b86a3-2f89-44b6-9236-a8ec12212265"/>
      <testCases>
        <TestCase id="EIDe0976b2c-cc9e-4969-bac0-31f2d92b939d">
          <label>TestCase label</label>
          <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_Keywords' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
          <parent ref="EIDb72fe916-9884-4d27-a725-a8008b2beb0a"/>
          <testSteps>
            <TestStep id="EID9fc5931b-db81-440d-aae0-704bd21c1de0">
              <label>FIXME-Label</label>
              <description><![CDATA[FIXME-Description]]></description>
              <parent ref="EIDe0976b2c-cc9e-4969-bac0-31f2d92b939d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1fec40f4-32d1-4232-84bb-57f71c914c15">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'type' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>stratum</li><li>theme</li><li>discipline</li><li>place</li></ul>]]></description>
                  <parent ref="EID9fc5931b-db81-440d-aae0-704bd21c1de0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('stratum', 'theme', 'discipline', 'place')
let $messages :=
  (for $record in $db
     let $typesFound := $record//*[local-name()='MD_Keywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='type' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'propName': 'type', 'localName': 'MD_Keywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'valueFound': $propertyFound, 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa346ded0-0ea4-40b8-8cc1-4fae0ac3725b">
          <label>is theme</label>
          <description><![CDATA[is theme]]></description>
          <parent ref="EIDb72fe916-9884-4d27-a725-a8008b2beb0a"/>
          <testSteps>
            <TestStep id="EID646dbe56-cb38-4490-9dc7-0685caf423fe">
              <label>is theme</label>
              <description><![CDATA[is theme]]></description>
              <parent ref="EIDa346ded0-0ea4-40b8-8cc1-4fae0ac3725b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4fc032ab-c451-4587-911c-dc05dc745de2">
                  <label>is theme</label>
                  <description><![CDATA[is theme]]></description>
                  <parent ref="EID646dbe56-cb38-4490-9dc7-0685caf423fe"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
     let $typesFound := $record//*[local-name()='MD_Keywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $ifPropertyCount := count($typeFound/*[local-name()='type' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_KeywordTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']/data(@codeListValue))
       return 
       if ($ifPropertyCount eq 0) then 
         local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'expectedValue': 'theme' })
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $ifPropertyCount := count($typeFound/data(@id))
       return 
       if ($ifPropertyCount eq 0) then 
         local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'id', 'namespace': '' })
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $ifPropertyCount := count($typeFound/*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco'])
       return 
       if ($ifPropertyCount eq 0) then 
         local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'CharacterString', 'namespace': 'http://www.isotc211.org/2005/gco' })
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0, $messages1, $messages2)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</ExecutableTestSuite>
